/*
 * Copyright (C) 2018 Unigroup Spreadtrum & RDA Technologies Co., Ltd.
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 ********************************************************************
 * Auto generated c code from ASIC Documentation, PLEASE DONOT EDIT *
 ********************************************************************
 */

#ifndef __ANLG_PHY_G8_H____
#define __ANLG_PHY_G8_H____

/* Some defs, in case these are not defined elsewhere */
#ifndef SCI_IOMAP
#define SCI_IOMAP(_b_) ( (_b_) )
#endif

#ifndef SCI_ADDR
#define SCI_ADDR(_b_, _o_) ( (_b_) + (_o_) )
#endif

#ifndef CTL_ANLG_PHY_G8_BASE
#define CTL_ANLG_PHY_G8_BASE            SCI_IOMAP(0x40430000)
#endif

/* registers definitions for CTL_ANLG_PHY_G8, 0x40430000 */
#define REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXCLKLANE SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x0000)
#define REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_0 SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x0004)
#define REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_1 SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x0008)
#define REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_2 SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x000C)
#define REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_3 SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x0010)
#define REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATAESC SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x0014)
#define REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_STATE_RX SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x0018)
#define REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_ERR    SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x001C)
#define REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_CTRL   SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x0020)
#define REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_RSVD   SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x0024)
#define REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_TEST   SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x0028)
#define REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_DATALANE_CTRL SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x002C)
#define REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_DUMY_CTRL SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x0030)
#define REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_REG_SEL_CFG_0 SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x0034)
#define REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_REG_SEL_CFG_1 SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x0038)
#define REG_ANLG_PHY_G8_ANALOG_USB20_USB20_TEST_PIN         SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x003C)
#define REG_ANLG_PHY_G8_ANALOG_USB20_USB20_UTMI_CTL1        SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x0040)
#define REG_ANLG_PHY_G8_ANALOG_USB20_USB20_BATTER_PLL       SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x0044)
#define REG_ANLG_PHY_G8_ANALOG_USB20_USB20_UTMI_CTL2        SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x0048)
#define REG_ANLG_PHY_G8_ANALOG_USB20_USB20_TRIMMING         SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x004C)
#define REG_ANLG_PHY_G8_ANALOG_USB20_USB20_PHY_BIST_TEST    SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x0050)
#define REG_ANLG_PHY_G8_ANALOG_USB20_REG_SEL_CFG_0          SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x0054)
#define REG_ANLG_PHY_G8_ANALOG_USB20_REG_SEL_CFG_1          SCI_ADDR(CTL_ANLG_PHY_G8_BASE, 0x0058)

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXCLKLANE, [0x40430000] */
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTHSCLK ( BIT(4) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSCLK ( BIT(3) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXITCLK ( BIT(2) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATECLK ( BIT(1) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ULPSACTIVENOTCLK ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_0, [0x40430004] */
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_0 ( BIT(10) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_0 ( BIT(9) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_0 ( BIT(8) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_0 ( BIT(7) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_0 ( BIT(6) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_0(x) ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_0 ( BIT(1) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXREADYESC_0 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_1, [0x40430008] */
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_1 ( BIT(10) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_1 ( BIT(9) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_1 ( BIT(8) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_1 ( BIT(7) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_1 ( BIT(6) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_1(x) ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_1 ( BIT(1) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXREADYESC_1 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_2, [0x4043000C] */
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_2 ( BIT(10) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_2 ( BIT(9) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_2 ( BIT(8) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_2 ( BIT(7) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_2 ( BIT(6) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_2(x) ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_2 ( BIT(1) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXREADYESC_2 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_3, [0x40430010] */
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_3 ( BIT(10) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_3 ( BIT(9) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_3 ( BIT(8) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_3 ( BIT(7) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_3 ( BIT(6) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_3(x) ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_3 ( BIT(1) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXREADYESC_3 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATAESC, [0x40430014] */
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_0(x) ( (x) << 24 & (BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31)) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_1(x) ( (x) << 16 & (BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_2(x) ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_3(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_STATE_RX, [0x40430018] */
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_RXCLKESC_0 ( BIT(27) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_RXLPDTESC_0 ( BIT(26) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_RXTRIGGERESC_0(x) ( (x) << 22 & (BIT(22)|BIT(23)|BIT(24)|BIT(25)) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_RXVALIDESC_0 ( BIT(21) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_RXCLKESC_1 ( BIT(20) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_RXLPDTESC_1 ( BIT(19) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_RXTRIGGERESC_1(x) ( (x) << 15 & (BIT(15)|BIT(16)|BIT(17)|BIT(18)) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_RXVALIDESC_1 ( BIT(14) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_RXCLKESC_2 ( BIT(13) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_RXLPDTESC_2 ( BIT(12) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_RXTRIGGERESC_2(x) ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_RXVALIDESC_2 ( BIT(7) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_RXCLKESC_3 ( BIT(6) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_RXLPDTESC_3 ( BIT(5) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_RXTRIGGERESC_3(x) ( (x) << 1  & (BIT(1)|BIT(2)|BIT(3)|BIT(4)) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_RXVALIDESC_3 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_ERR, [0x4043001C] */
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRESC_0  ( BIT(19) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRSYNCESC_0 ( BIT(18) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTROL_0 ( BIT(17) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP0_0 ( BIT(16) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP1_0 ( BIT(15) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRESC_1  ( BIT(14) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRSYNCESC_1 ( BIT(13) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTROL_1 ( BIT(12) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP0_1 ( BIT(11) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP1_1 ( BIT(10) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRESC_2  ( BIT(9) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRSYNCESC_2 ( BIT(8) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTROL_2 ( BIT(7) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP0_2 ( BIT(6) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP1_2 ( BIT(5) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRESC_3  ( BIT(4) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRSYNCESC_3 ( BIT(3) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTROL_3 ( BIT(2) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP0_3 ( BIT(1) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP1_3 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_CTRL, [0x40430020] */
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_PS_PD_S   ( BIT(21) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_PS_PD_L   ( BIT(20) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_SHUTDOWNZ ( BIT(19) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_RSTZ      ( BIT(18) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_0  ( BIT(17) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_1  ( BIT(16) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_2  ( BIT(15) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_3  ( BIT(14) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_ENABLECLK ( BIT(13) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_FORCEPLL  ( BIT(12) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_PLLLOCK   ( BIT(11) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_BISTON    ( BIT(10) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_BISTDONE  ( BIT(9) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_IF_SEL    ( BIT(8) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TRIMBG(x) ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TX_RCTL(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_RSVD, [0x40430024] */
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_RESERVED(x) ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_RESERVEDO(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_TEST, [0x40430028] */
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TESTDIN(x) ( (x) << 11 & (BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TESTDOUT(x) ( (x) << 3  & (BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TESTEN    ( BIT(2) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TESTCLK   ( BIT(1) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TESTCLR   ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_4L_DATALANE_CTRL, [0x4043002C] */
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_0 ( BIT(22) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_DIRECTION_0 ( BIT(21) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TURNDISABLE_0 ( BIT(20) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_FORCERXMODE_0 ( BIT(19) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_FORCETXSTOPMODE_0 ( BIT(18) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATEDATA_0 ( BIT(17) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_1 ( BIT(16) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TURNDISABLE_1 ( BIT(15) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_FORCERXMODE_1 ( BIT(14) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_FORCETXSTOPMODE_1 ( BIT(13) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATEDATA_1 ( BIT(12) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_2 ( BIT(11) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_DIRECTION_2 ( BIT(10) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TURNDISABLE_2 ( BIT(9) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_FORCERXMODE_2 ( BIT(8) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_FORCETXSTOPMODE_2 ( BIT(7) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATEDATA_2 ( BIT(6) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_3 ( BIT(5) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_DIRECTION_3 ( BIT(4) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_TURNDISABLE_3 ( BIT(3) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_FORCERXMODE_3 ( BIT(2) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_FORCETXSTOPMODE_3 ( BIT(1) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATEDATA_3 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_DSI_DUMY_CTRL, [0x40430030] */
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_ANALOG_DSI_DUMY_IN(x) ( (x) << 16 & (0xFFFF0000) )
#define BIT_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_ANALOG_DSI_DUMY_OUT(x) ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_REG_SEL_CFG_0, [0x40430034] */
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTHSCLK ( BIT(31) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSCLK ( BIT(30) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXITCLK ( BIT(29) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_0 ( BIT(28) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_0 ( BIT(27) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_0 ( BIT(26) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_0 ( BIT(25) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_0 ( BIT(24) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_0 ( BIT(23) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_0 ( BIT(22) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_1 ( BIT(21) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_1 ( BIT(20) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_1 ( BIT(19) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_1 ( BIT(18) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_1 ( BIT(17) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_1 ( BIT(16) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_1 ( BIT(15) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_2 ( BIT(14) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_2 ( BIT(13) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_2 ( BIT(12) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_2 ( BIT(11) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_2 ( BIT(10) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_2 ( BIT(9) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_2 ( BIT(8) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_3 ( BIT(7) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_3 ( BIT(6) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_3 ( BIT(5) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_3 ( BIT(4) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_3 ( BIT(3) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_3 ( BIT(2) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_3 ( BIT(1) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_0 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_MIPI_DSI_4LANE_REG_SEL_CFG_1, [0x40430038] */
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_1 ( BIT(18) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_2 ( BIT(17) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_3 ( BIT(16) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_PS_PD_S ( BIT(15) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_PS_PD_L ( BIT(14) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_SHUTDOWNZ ( BIT(13) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_RSTZ ( BIT(12) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_0 ( BIT(11) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_1 ( BIT(10) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_2 ( BIT(9) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_3 ( BIT(8) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLECLK ( BIT(7) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_FORCEPLL ( BIT(6) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_BISTON ( BIT(5) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TESTDIN ( BIT(4) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TESTEN ( BIT(3) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TESTCLK ( BIT(2) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TESTCLR ( BIT(1) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_0 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_USB20_USB20_TEST_PIN, [0x4043003C] */
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_TESTCLK          ( BIT(24) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_TESTDATAIN(x)    ( (x) << 16 & (BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_TESTADDR(x)      ( (x) << 12 & (BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_TESTDATAOUTSEL   ( BIT(11) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_TESTDATAOUT(x)   ( (x) << 7  & (BIT(7)|BIT(8)|BIT(9)|BIT(10)) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_BIST_MODE(x)     ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_T2RCOMP          ( BIT(1) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_LPBK_END         ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_USB20_USB20_UTMI_CTL1, [0x40430040] */
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_DATABUS16_8      ( BIT(28) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_SUSPENDM         ( BIT(27) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_PORN             ( BIT(26) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_RESET            ( BIT(25) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_RXERROR          ( BIT(24) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_BYPASS_DRV_DP    ( BIT(23) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_BYPASS_DRV_DM    ( BIT(22) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_BYPASS_FS        ( BIT(21) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_BYPASS_IN_DP     ( BIT(20) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_BYPASS_IN_DM     ( BIT(19) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_BYPASS_OUT_DP    ( BIT(18) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_BYPASS_OUT_DM    ( BIT(17) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_VBUSVLDEXT       ( BIT(16) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_RESERVED(x)      ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_USB20_USB20_BATTER_PLL, [0x40430044] */
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_PS_PD_S          ( BIT(5) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_PS_PD_L          ( BIT(4) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_REXTENABLE       ( BIT(3) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_DMPULLUP         ( BIT(2) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_HSIC_PLLON             ( BIT(1) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_SAMPLER_SEL      ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_USB20_USB20_UTMI_CTL2, [0x40430048] */
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_DPPULLDOWN       ( BIT(3) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_DMPULLDOWN       ( BIT(2) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_TXBITSTUFFENABLE ( BIT(1) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_TXBITSTUFFENABLEH ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_USB20_USB20_TRIMMING, [0x4043004C] */
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_TUNEHSAMP(x)     ( (x) << 27 & (BIT(27)|BIT(28)) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_TFREGRES(x)      ( (x) << 21 & (BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26)) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_TFHSRES(x)       ( (x) << 16 & (BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_TUNERISE(x)      ( (x) << 14 & (BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_TUNEOTG(x)       ( (x) << 11 & (BIT(11)|BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_TUNEDSC(x)       ( (x) << 9  & (BIT(9)|BIT(10)) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_TUNESQ(x)        ( (x) << 5  & (BIT(5)|BIT(6)|BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_TUNEEQ(x)        ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_TUNEPLLS(x)      ( (x) << 0  & (BIT(0)|BIT(1)) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_USB20_USB20_PHY_BIST_TEST, [0x40430050] */
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_BISTRAM_EN       ( BIT(1) )
#define BIT_ANLG_PHY_G8_ANALOG_USB20_USB20_BIST_MODE_EN     ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_USB20_REG_SEL_CFG_0, [0x40430054] */
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_TESTCLK  ( BIT(31) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_TESTDATAIN ( BIT(30) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_TESTADDR ( BIT(29) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_TESTDATAOUTSEL ( BIT(28) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_BIST_MODE ( BIT(27) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_DATABUS16_8 ( BIT(26) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_SUSPENDM ( BIT(25) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_PORN     ( BIT(24) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_RESET    ( BIT(23) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_BYPASS_DRV_DP ( BIT(22) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_BYPASS_DRV_DM ( BIT(21) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_BYPASS_FS ( BIT(20) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_BYPASS_IN_DP ( BIT(19) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_BYPASS_IN_DM ( BIT(18) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_VBUSVLDEXT ( BIT(17) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_RESERVED ( BIT(16) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_PS_PD_S  ( BIT(15) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_PS_PD_L  ( BIT(14) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_REXTENABLE ( BIT(13) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_DMPULLUP ( BIT(12) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_HSIC_PLLON     ( BIT(11) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_SAMPLER_SEL ( BIT(10) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_DPPULLDOWN ( BIT(9) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_DMPULLDOWN ( BIT(8) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_TXBITSTUFFENABLE ( BIT(7) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_TXBITSTUFFENABLEH ( BIT(6) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_TUNEHSAMP ( BIT(5) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_TFREGRES ( BIT(4) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_TFHSRES  ( BIT(3) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_TUNERISE ( BIT(2) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_TUNEOTG  ( BIT(1) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_TUNEDSC  ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G8_ANALOG_USB20_REG_SEL_CFG_1, [0x40430058] */
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_TUNESQ   ( BIT(2) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_TUNEEQ   ( BIT(1) )
#define BIT_ANLG_PHY_G8_DBG_SEL_ANALOG_USB20_USB20_TUNEPLLS ( BIT(0) )

/* vars definitions for controller CTL_ANLG_PHY_G8 */


#endif /* __ANLG_PHY_G8_H____ */
