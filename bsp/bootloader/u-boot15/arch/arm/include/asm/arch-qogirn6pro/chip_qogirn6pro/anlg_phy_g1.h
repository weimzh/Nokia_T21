/*
 * Copyright (C) 2018 Unigroup Spreadtrum & RDA Technologies Co., Ltd.
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 ********************************************************************
 * Auto generated c code from ASIC Documentation, PLEASE DONOT EDIT *
 ********************************************************************
 */

/*
 * SVN URL      : http://shsvn06/svn/CHIP/Interface/SharkL6Pro/Autoreg/RTL0.9/SharkL6Pro_doc_DE_top_0635_cq_goodcode_202010131505/reg/top/analog_reg/Analog_G1_Control_Register.xlsx;Analog_G1
 *     Revision : 248562
 *     Author   : {author}
 *     Date     : {date}
 */

#ifndef __ANLG_PHY_G1_H____
#define __ANLG_PHY_G1_H____

/* Some defs, in case these are not defined elsewhere */
#ifndef SCI_IOMAP
#define SCI_IOMAP(_b_) ( (_b_) )
#endif

#ifndef SCI_ADDR
#define SCI_ADDR(_b_, _o_) ( (_b_) + (_o_) )
#endif

#ifndef CTL_ANLG_PHY_G1_BASE
#define CTL_ANLG_PHY_G1_BASE            SCI_IOMAP(0x64304000)
#endif

/* registers definitions for CTL_ANLG_PHY_G1, 0x64304000 */
#define REG_ANLG_PHY_G1_ANALOG_BB_TOP_APC_CTRL0             SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0000)
#define REG_ANLG_PHY_G1_ANALOG_BB_TOP_BB_TOP_CTRL0          SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0004)
#define REG_ANLG_PHY_G1_ANALOG_BB_TOP_BB_TOP_CTRL1          SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0008)
#define REG_ANLG_PHY_G1_ANALOG_BB_TOP_SINE_RCV_CTRL         SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x000C)
#define REG_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_CTRL0            SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0010)
#define REG_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_CTRL1            SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0014)
#define REG_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_CTRL2            SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0018)
#define REG_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_CTRL3            SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x001C)
#define REG_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_CTRL4            SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0020)
#define REG_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_CTRL5            SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0024)
#define REG_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_CTRL6            SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0028)
#define REG_ANLG_PHY_G1_ANALOG_BB_TOP_SINE_DRV_CTRL         SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x002C)
#define REG_ANLG_PHY_G1_ANALOG_BB_TOP_REG_FOR_TEST_CTRL1    SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0030)
#define REG_ANLG_PHY_G1_ANALOG_BB_TOP_REG_FOR_TEST_CTRL2    SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0034)
#define REG_ANLG_PHY_G1_ANALOG_BB_TOP_REG_SEL_CFG_0         SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0038)

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_BB_TOP_APC_CTRL0, [0x64304000] */
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_AAPC_BPRC             ( BIT(22) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_AAPC_D(x)             ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_AAPC_G0(x)            ( (x) << 6  & (BIT(6)|BIT(7)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_AAPC_G1(x)            ( (x) << 4  & (BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_AAPC_OUT_SEL          ( BIT(3) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_AAPC_PD               ( BIT(2) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_AAPC_RESERVED(x)      ( (x) << 0  & (BIT(0)|BIT(1)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_BB_TOP_BB_TOP_CTRL0, [0x64304004] */
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_BB_BG_RBIAS_MODE      ( BIT(17) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_BB_CON_BG             ( BIT(16) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_BB_RESERVED(x)        ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_BB_TOP_BB_TOP_CTRL1, [0x64304008] */
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_BB_TESTMUX(x)         ( (x) << 1  & (BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_LVDSRFPLL_REF_SEL     ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_BB_TOP_SINE_RCV_CTRL, [0x6430400C] */
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_PROBE_SEL(x)          ( (x) << 10 & (BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_REC_26M_PMIC_SR_TRIM(x) ( (x) << 6  & (BIT(6)|BIT(7)|BIT(8)|BIT(9)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_REC_52M_LVDSPHY_SR_TRIM(x) ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_REC_52MHZ_BUF_PD      ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_26M_SEL          ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_CTRL0, [0x64304010] */
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_LOCK_DONE        ( BIT(18) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_N(x)             ( (x) << 7  & (BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_ICP(x)           ( (x) << 3  & (BIT(3)|BIT(4)|BIT(5)|BIT(6)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_SDM_EN           ( BIT(2) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_MOD_EN           ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_DIV_S            ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_CTRL1, [0x64304014] */
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_NINT(x)          ( (x) << 23 & (BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_KINT(x)          ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_CTRL2, [0x64304018] */
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_RST              ( BIT(7) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_PD               ( BIT(6) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_REF_SEL(x)       ( (x) << 4  & (BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_POSTDIV(x)       ( (x) << 2  & (BIT(2)|BIT(3)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_DIV_EN           ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_CLKOUT_EN        ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_CTRL3, [0x6430401C] */
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_26M_DIV(x)       ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_CTRL4, [0x64304020] */
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_SSC_CTRL(x)      ( (x) << 10 & (BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_LPF(x)           ( (x) << 7  & (BIT(7)|BIT(8)|BIT(9)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_LDO_TRIM(x)      ( (x) << 3  & (BIT(3)|BIT(4)|BIT(5)|BIT(6)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_ICP_OFFSET(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_CTRL5, [0x64304024] */
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_BIST_CTRL(x)     ( (x) << 17 & (BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_BIST_EN          ( BIT(16) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_BIST_CNT(x)      ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_CTRL6, [0x64304028] */
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_RESERVED(x)      ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_BB_TOP_SINE_DRV_CTRL, [0x6430402C] */
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_SINDRV_26M_ENA_PCIE   ( BIT(20) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_SINDRV_26M_ENA_PMIC   ( BIT(19) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_SINDRV_52M_ENA_LVDSPHY ( BIT(18) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_SINDRV_ENA_SQUARE     ( BIT(17) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_SINE_DRV_SEL          ( BIT(16) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_SINEO_RPLL_CLKOUT_EN  ( BIT(15) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_TEST_CLK_DIV(x)       ( (x) << 13 & (BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_TEST_CLK_EN           ( BIT(12) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_CLK26M_RESERVED(x)    ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_REC_26M_PCIE_SR_TRIM(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_BB_TOP_REG_FOR_TEST_CTRL1, [0x64304030] */
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_PD_SEL_RFTI_OR_PMU ( BIT(6) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RPLL_RST_SEL_RFTI_OR_PMU ( BIT(5) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_RAMP_GEN_SEL          ( BIT(4) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_ANALOG_BB_TOP_AAPC_GEN_SEL(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_BB_TOP_REG_FOR_TEST_CTRL2, [0x64304034] */
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_ANALOG_BB_TOP_AAPC_MAX_RANGE(x) ( (x) << 15 & (BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_ANALOG_BB_TOP_AAPC_MIN_RANGE(x) ( (x) << 1  & (BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G1_ANALOG_BB_TOP_ANALOG_BB_TOP_AAPC_RSTN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_BB_TOP_REG_SEL_CFG_0, [0x64304038] */
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_AAPC_BPRC     ( BIT(27) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_AAPC_D        ( BIT(26) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_AAPC_G0       ( BIT(25) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_AAPC_G1       ( BIT(24) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_AAPC_OUT_SEL  ( BIT(23) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_AAPC_PD       ( BIT(22) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_AAPC_RESERVED ( BIT(21) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_REC_52MHZ_BUF_PD ( BIT(20) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_RPLL_N        ( BIT(19) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_RPLL_ICP      ( BIT(18) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_RPLL_SDM_EN   ( BIT(17) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_RPLL_MOD_EN   ( BIT(16) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_RPLL_DIV_S    ( BIT(15) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_RPLL_NINT     ( BIT(14) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_RPLL_KINT     ( BIT(13) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_RPLL_RST      ( BIT(12) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_RPLL_PD       ( BIT(11) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_RPLL_REF_SEL  ( BIT(10) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_RPLL_POSTDIV  ( BIT(9) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_RPLL_DIV_EN   ( BIT(8) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_RPLL_CLKOUT_EN ( BIT(7) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_RPLL_26M_DIV  ( BIT(6) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_RPLL_SSC_CTRL ( BIT(5) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_RPLL_LPF      ( BIT(4) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_RPLL_LDO_TRIM ( BIT(3) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_RPLL_ICP_OFFSET ( BIT(2) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_SINDRV_26M_ENA_PMIC ( BIT(1) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_BB_TOP_SINDRV_ENA_SQUARE ( BIT(0) )

/* vars definitions for controller CTL_ANLG_PHY_G1 */


#endif /* __ANLG_PHY_G1_H____ */
