/*
 * Copyright (C) 2018 Unigroup Spreadtrum & RDA Technologies Co., Ltd.
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 ********************************************************************
 * Auto generated c code from ASIC Documentation, PLEASE DONOT EDIT *
 ********************************************************************
 */

#ifndef __ANLG_PHY_G4_H____
#define __ANLG_PHY_G4_H____

/* Some defs, in case these are not defined elsewhere */
#ifndef SCI_IOMAP
#define SCI_IOMAP(_b_) ( (_b_) )
#endif

#ifndef SCI_ADDR
#define SCI_ADDR(_b_, _o_) ( (_b_) + (_o_) )
#endif

#ifndef CTL_ANLG_PHY_G4_BASE
#define CTL_ANLG_PHY_G4_BASE            SCI_IOMAP(0x40359000)
#endif

/* registers definitions for CTL_ANLG_PHY_G4, 0x40359000 */
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_CTRL0     SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0000)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_CTRL1     SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0004)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_CTRL2     SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0008)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_CTRL3     SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x000C)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_CTRL4     SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0010)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_CTRL0     SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0018)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_CTRL1     SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x001C)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_CTRL2     SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0020)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_CTRL3     SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0024)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_CTRL4     SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0028)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_CTRL0     SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0030)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_CTRL1     SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0034)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_CTRL2     SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0038)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_CTRL3     SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x003C)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_CTRL4     SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0040)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL_TEST_CTRL  SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0048)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_THM1_CTRL_0     SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x004C)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_THM1_CTRL_1     SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0050)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_ANA_MPLL_DUMY   SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0054)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_REG_SEL_CFG_0   SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0058)
#define REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXCLKLANE SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x005C)
#define REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_0 SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0060)
#define REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_1 SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0064)
#define REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_2 SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0068)
#define REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_3 SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x006C)
#define REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATAESC SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0070)
#define REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_STATE_RX SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0074)
#define REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_ERR    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0078)
#define REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_CTRL   SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x007C)
#define REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_RSVD   SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0080)
#define REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_TEST   SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0084)
#define REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_DATALANE_CTRL SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0088)
#define REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_DUMY_CTRL SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x008C)
#define REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_REG_SEL_CFG_0 SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0090)
#define REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_REG_SEL_CFG_1 SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0094)
#define REG_ANLG_PHY_G4_ANALOG_USB20_USB20_TEST_PIN         SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0098)
#define REG_ANLG_PHY_G4_ANALOG_USB20_USB20_UTMI_CTL1        SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x009C)
#define REG_ANLG_PHY_G4_ANALOG_USB20_USB20_BATTER_PLL       SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00A0)
#define REG_ANLG_PHY_G4_ANALOG_USB20_USB20_UTMI_CTL2        SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00A4)
#define REG_ANLG_PHY_G4_ANALOG_USB20_USB20_TRIMMING         SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00A8)
#define REG_ANLG_PHY_G4_ANALOG_USB20_USB20_PHY_BIST_TEST    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00AC)
#define REG_ANLG_PHY_G4_ANALOG_USB20_REG_SEL_CFG_0          SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00B0)
#define REG_ANLG_PHY_G4_ANALOG_RCO100M_RTC100M_CTRL         SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00B4)
#define REG_ANLG_PHY_G4_ANALOG_RCO100M_REG_SEL_CFG_0        SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00B8)
#define REG_ANLG_PHY_G4_ANALOG_USB20_IDDG                   SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00BC)
#define REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_ISO_SW_EN SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00C0)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_DVFS_0    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00C4)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_DVFS_1    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00C8)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_DVFS_2    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00CC)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_DVFS_3    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00D0)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_DVFS_4    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00D4)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_DVFS_5    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00D8)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_DVFS_0    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00DC)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_DVFS_1    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00E0)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_DVFS_2    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00E4)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_DVFS_3    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00E8)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_DVFS_4    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00EC)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_DVFS_5    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00F0)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_DVFS_0    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00F4)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_DVFS_1    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00F8)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_DVFS_2    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x00FC)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_DVFS_3    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0100)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_DVFS_4    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0104)
#define REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_DVFS_5    SCI_ADDR(CTL_ANLG_PHY_G4_BASE, 0x0108)

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_CTRL0, [0x40359000] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_MACRO_TYPE(x) ( (x) << 24 & (BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_REG_VERSION(x) ( (x) << 20 & (BIT(20)|BIT(21)|BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_N(x)      ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_IBIAS(x)  ( (x) << 6  & (BIT(6)|BIT(7)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_LPF(x)    ( (x) << 3  & (BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_SDM_EN    ( BIT(2) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_MOD_EN    ( BIT(1) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_DIV_S     ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_CTRL1, [0x40359004] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_NINT(x)   ( (x) << 23 & (BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_KINT(x)   ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_CTRL2, [0x40359008] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_LOCK_DONE ( BIT(31) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_RST       ( BIT(25) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_PD        ( BIT(24) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_POSTDIV   ( BIT(16) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_CLKOUTDIV_EN ( BIT(1) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_CLKOUT_EN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_CTRL3, [0x4035900C] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_RESERVED(x) ( (x) << 16 & (BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_CCS_CTRL(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_CTRL4, [0x40359010] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_BIST_CTRL(x) ( (x) << 17 & (BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_BIST_EN   ( BIT(16) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_BIST_CNT(x) ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_CTRL0, [0x40359018] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_MACRO_TYPE(x) ( (x) << 24 & (BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_REG_VERSION(x) ( (x) << 20 & (BIT(20)|BIT(21)|BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_N(x)      ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_IBIAS(x)  ( (x) << 6  & (BIT(6)|BIT(7)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_LPF(x)    ( (x) << 3  & (BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_SDM_EN    ( BIT(2) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_MOD_EN    ( BIT(1) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_DIV_S     ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_CTRL1, [0x4035901C] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_NINT(x)   ( (x) << 23 & (BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_KINT(x)   ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_CTRL2, [0x40359020] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_LOCK_DONE ( BIT(31) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_RST       ( BIT(25) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_PD        ( BIT(24) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_POSTDIV   ( BIT(16) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_CLKOUTDIV_EN ( BIT(1) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_CLKOUT_EN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_CTRL3, [0x40359024] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_RESERVED(x) ( (x) << 16 & (BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_CCS_CTRL(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_CTRL4, [0x40359028] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_BIST_CTRL(x) ( (x) << 17 & (BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_BIST_EN   ( BIT(16) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_BIST_CNT(x) ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_CTRL0, [0x40359030] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_MACRO_TYPE(x) ( (x) << 24 & (BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_REG_VERSION(x) ( (x) << 20 & (BIT(20)|BIT(21)|BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_N(x)      ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_IBIAS(x)  ( (x) << 6  & (BIT(6)|BIT(7)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_LPF(x)    ( (x) << 3  & (BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_SDM_EN    ( BIT(2) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_MOD_EN    ( BIT(1) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_DIV_S     ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_CTRL1, [0x40359034] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_NINT(x)   ( (x) << 23 & (BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_KINT(x)   ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_CTRL2, [0x40359038] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_LOCK_DONE ( BIT(31) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_RST       ( BIT(25) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_PD        ( BIT(24) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_POSTDIV   ( BIT(16) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_CLKOUTDIV_EN ( BIT(1) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_CLKOUT_EN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_CTRL3, [0x4035903C] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_RESERVED(x) ( (x) << 16 & (BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_CCS_CTRL(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_CTRL4, [0x40359040] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_BIST_CTRL(x) ( (x) << 17 & (BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_BIST_EN   ( BIT(16) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_BIST_CNT(x) ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL_TEST_CTRL, [0x40359048] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_TEST_SEL(x)     ( (x) << 13 & (BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_TEST_CLK_EN     ( BIT(12) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_TEST_THM_SEL    ( BIT(11) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_ANALOG_PLL_RESERVED(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_THM1_CTRL_0, [0x4035904C] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_THM_BJT_SEL     ( BIT(15) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_THM_RSTN        ( BIT(14) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_THM_RUN         ( BIT(13) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_THM_PD          ( BIT(12) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_THM_DATA(x)     ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_THM_VALID       ( BIT(3) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_THM_BG_RBIAS_MODE ( BIT(2) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_THM_TEST_SEL(x) ( (x) << 0  & (BIT(0)|BIT(1)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_THM1_CTRL_1, [0x40359050] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_THM_BP_MODE     ( BIT(24) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_THM_BP_DATA(x)  ( (x) << 16 & (BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_THM_RESERVED(x) ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_ANA_MPLL_DUMY, [0x40359054] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_ANALOG_MPLL_DUMY_IN(x) ( (x) << 16 & (0xFFFF0000) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_ANALOG_MPLL_DUMY_OUT(x) ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_REG_SEL_CFG_0, [0x40359058] */
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MPLL_THM_TOP_MPLL0_PD ( BIT(15) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MPLL_THM_TOP_MPLL0_RST ( BIT(14) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MPLL_THM_TOP_MPLL0_CLKOUTDIV_EN ( BIT(13) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MPLL_THM_TOP_MPLL0_CLKOUT_EN ( BIT(12) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MPLL_THM_TOP_MPLL1_PD ( BIT(11) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MPLL_THM_TOP_MPLL1_RST ( BIT(10) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MPLL_THM_TOP_MPLL1_CLKOUTDIV_EN ( BIT(9) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MPLL_THM_TOP_MPLL1_CLKOUT_EN ( BIT(8) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MPLL_THM_TOP_MPLL2_PD ( BIT(7) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MPLL_THM_TOP_MPLL2_RST ( BIT(6) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MPLL_THM_TOP_MPLL2_CLKOUTDIV_EN ( BIT(5) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MPLL_THM_TOP_MPLL2_CLKOUT_EN ( BIT(4) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MPLL_THM_TOP_THM_BJT_SEL ( BIT(3) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MPLL_THM_TOP_THM_RSTN ( BIT(2) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MPLL_THM_TOP_THM_RUN ( BIT(1) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MPLL_THM_TOP_THM_PD  ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXCLKLANE, [0x4035905C] */
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTHSCLK ( BIT(4) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSCLK ( BIT(3) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXITCLK ( BIT(2) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATECLK ( BIT(1) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ULPSACTIVENOTCLK ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_0, [0x40359060] */
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_0 ( BIT(10) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_0 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_0 ( BIT(8) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_0 ( BIT(7) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_0 ( BIT(6) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_0(x) ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_0 ( BIT(1) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXREADYESC_0 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_1, [0x40359064] */
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_1 ( BIT(10) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_1 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_1 ( BIT(8) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_1 ( BIT(7) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_1 ( BIT(6) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_1(x) ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_1 ( BIT(1) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXREADYESC_1 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_2, [0x40359068] */
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_2 ( BIT(10) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_2 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_2 ( BIT(8) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_2 ( BIT(7) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_2 ( BIT(6) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_2(x) ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_2 ( BIT(1) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXREADYESC_2 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_3, [0x4035906C] */
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_3 ( BIT(10) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_3 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_3 ( BIT(8) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_3 ( BIT(7) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_3 ( BIT(6) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_3(x) ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_3 ( BIT(1) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXREADYESC_3 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATAESC, [0x40359070] */
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_0(x) ( (x) << 24 & (BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31)) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_1(x) ( (x) << 16 & (BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_2(x) ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_3(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_STATE_RX, [0x40359074] */
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_RXCLKESC_0 ( BIT(27) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_RXLPDTESC_0 ( BIT(26) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_RXTRIGGERESC_0(x) ( (x) << 22 & (BIT(22)|BIT(23)|BIT(24)|BIT(25)) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_RXVALIDESC_0 ( BIT(21) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_RXCLKESC_1 ( BIT(20) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_RXLPDTESC_1 ( BIT(19) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_RXTRIGGERESC_1(x) ( (x) << 15 & (BIT(15)|BIT(16)|BIT(17)|BIT(18)) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_RXVALIDESC_1 ( BIT(14) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_RXCLKESC_2 ( BIT(13) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_RXLPDTESC_2 ( BIT(12) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_RXTRIGGERESC_2(x) ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_RXVALIDESC_2 ( BIT(7) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_RXCLKESC_3 ( BIT(6) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_RXLPDTESC_3 ( BIT(5) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_RXTRIGGERESC_3(x) ( (x) << 1  & (BIT(1)|BIT(2)|BIT(3)|BIT(4)) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_RXVALIDESC_3 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_ERR, [0x40359078] */
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRESC_0  ( BIT(19) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRSYNCESC_0 ( BIT(18) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTROL_0 ( BIT(17) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP0_0 ( BIT(16) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP1_0 ( BIT(15) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRESC_1  ( BIT(14) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRSYNCESC_1 ( BIT(13) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTROL_1 ( BIT(12) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP0_1 ( BIT(11) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP1_1 ( BIT(10) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRESC_2  ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRSYNCESC_2 ( BIT(8) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTROL_2 ( BIT(7) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP0_2 ( BIT(6) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP1_2 ( BIT(5) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRESC_3  ( BIT(4) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRSYNCESC_3 ( BIT(3) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTROL_3 ( BIT(2) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP0_3 ( BIT(1) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP1_3 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_CTRL, [0x4035907C] */
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_PS_PD_S   ( BIT(21) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_PS_PD_L   ( BIT(20) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_SHUTDOWNZ ( BIT(19) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_RSTZ      ( BIT(18) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_0  ( BIT(17) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_1  ( BIT(16) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_2  ( BIT(15) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_3  ( BIT(14) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ENABLECLK ( BIT(13) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_FORCEPLL  ( BIT(12) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_PLLLOCK   ( BIT(11) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_BISTON    ( BIT(10) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_BISTDONE  ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_IF_SEL    ( BIT(8) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TRIMBG(x) ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TX_RCTL(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_RSVD, [0x40359080] */
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_RESERVED(x) ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_RESERVEDO(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_TEST, [0x40359084] */
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TESTDIN(x) ( (x) << 11 & (BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TESTDOUT(x) ( (x) << 3  & (BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TESTEN    ( BIT(2) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TESTCLK   ( BIT(1) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TESTCLR   ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_DATALANE_CTRL, [0x40359088] */
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_0 ( BIT(22) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_DIRECTION_0 ( BIT(21) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TURNDISABLE_0 ( BIT(20) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_FORCERXMODE_0 ( BIT(19) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_FORCETXSTOPMODE_0 ( BIT(18) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATEDATA_0 ( BIT(17) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_1 ( BIT(16) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TURNDISABLE_1 ( BIT(15) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_FORCERXMODE_1 ( BIT(14) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_FORCETXSTOPMODE_1 ( BIT(13) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATEDATA_1 ( BIT(12) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_2 ( BIT(11) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_DIRECTION_2 ( BIT(10) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TURNDISABLE_2 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_FORCERXMODE_2 ( BIT(8) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_FORCETXSTOPMODE_2 ( BIT(7) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATEDATA_2 ( BIT(6) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_3 ( BIT(5) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_DIRECTION_3 ( BIT(4) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_TURNDISABLE_3 ( BIT(3) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_FORCERXMODE_3 ( BIT(2) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_FORCETXSTOPMODE_3 ( BIT(1) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATEDATA_3 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_DUMY_CTRL, [0x4035908C] */
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_ANALOG_DSI_DUMY_IN(x) ( (x) << 16 & (0xFFFF0000) )
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_ANALOG_DSI_DUMY_OUT(x) ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_REG_SEL_CFG_0, [0x40359090] */
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTHSCLK ( BIT(31) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSCLK ( BIT(30) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXITCLK ( BIT(29) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_0 ( BIT(28) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_0 ( BIT(27) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_0 ( BIT(26) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_0 ( BIT(25) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_0 ( BIT(24) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_0 ( BIT(23) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_0 ( BIT(22) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_1 ( BIT(21) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_1 ( BIT(20) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_1 ( BIT(19) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_1 ( BIT(18) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_1 ( BIT(17) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_1 ( BIT(16) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_1 ( BIT(15) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_2 ( BIT(14) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_2 ( BIT(13) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_2 ( BIT(12) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_2 ( BIT(11) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_2 ( BIT(10) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_2 ( BIT(9) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_2 ( BIT(8) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_3 ( BIT(7) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_3 ( BIT(6) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_3 ( BIT(5) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_3 ( BIT(4) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_3 ( BIT(3) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_3 ( BIT(2) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_3 ( BIT(1) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_0 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_REG_SEL_CFG_1, [0x40359094] */
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ISO_SW_EN ( BIT(19) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_1 ( BIT(18) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_2 ( BIT(17) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_3 ( BIT(16) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_PS_PD_S ( BIT(15) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_PS_PD_L ( BIT(14) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_SHUTDOWNZ ( BIT(13) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_RSTZ ( BIT(12) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_0 ( BIT(11) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_1 ( BIT(10) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_2 ( BIT(9) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_3 ( BIT(8) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLECLK ( BIT(7) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_FORCEPLL ( BIT(6) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_BISTON ( BIT(5) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TESTDIN ( BIT(4) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TESTEN ( BIT(3) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TESTCLK ( BIT(2) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TESTCLR ( BIT(1) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_0 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_USB20_USB20_TEST_PIN, [0x40359098] */
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_TESTCLK          ( BIT(24) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_TESTDATAIN(x)    ( (x) << 16 & (BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_TESTADDR(x)      ( (x) << 12 & (BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_TESTDATAOUTSEL   ( BIT(11) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_TESTDATAOUT(x)   ( (x) << 7  & (BIT(7)|BIT(8)|BIT(9)|BIT(10)) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_BIST_MODE(x)     ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_T2RCOMP          ( BIT(1) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_LPBK_END         ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_USB20_USB20_UTMI_CTL1, [0x4035909C] */
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_DATABUS16_8      ( BIT(28) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_SUSPENDM         ( BIT(27) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_PORN             ( BIT(26) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_RESET            ( BIT(25) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_RXERROR          ( BIT(24) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_BYPASS_DRV_DP    ( BIT(23) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_BYPASS_DRV_DM    ( BIT(22) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_BYPASS_FS        ( BIT(21) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_BYPASS_IN_DP     ( BIT(20) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_BYPASS_IN_DM     ( BIT(19) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_BYPASS_OUT_DP    ( BIT(18) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_BYPASS_OUT_DM    ( BIT(17) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_VBUSVLDEXT       ( BIT(16) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_RESERVED(x)      ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_USB20_USB20_BATTER_PLL, [0x403590A0] */
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_PS_PD_S          ( BIT(5) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_PS_PD_L          ( BIT(4) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_REXTENABLE       ( BIT(3) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_DMPULLUP         ( BIT(2) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_HSIC_PLLON             ( BIT(1) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_SAMPLER_SEL      ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_USB20_USB20_UTMI_CTL2, [0x403590A4] */
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_DPPULLDOWN       ( BIT(3) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_DMPULLDOWN       ( BIT(2) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_TXBITSTUFFENABLE ( BIT(1) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_TXBITSTUFFENABLEH ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_USB20_USB20_TRIMMING, [0x403590A8] */
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_TUNEHSAMP(x)     ( (x) << 27 & (BIT(27)|BIT(28)) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_TFREGRES(x)      ( (x) << 21 & (BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26)) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_TFHSRES(x)       ( (x) << 16 & (BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_TUNERISE(x)      ( (x) << 14 & (BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_TUNEOTG(x)       ( (x) << 11 & (BIT(11)|BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_TUNEDSC(x)       ( (x) << 9  & (BIT(9)|BIT(10)) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_TUNESQ(x)        ( (x) << 5  & (BIT(5)|BIT(6)|BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_TUNEEQ(x)        ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_TUNEPLLS(x)      ( (x) << 0  & (BIT(0)|BIT(1)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_USB20_USB20_PHY_BIST_TEST, [0x403590AC] */
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_BISTRAM_EN       ( BIT(1) )
#define BIT_ANLG_PHY_G4_ANALOG_USB20_USB20_BIST_MODE_EN     ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_USB20_REG_SEL_CFG_0, [0x403590B0] */
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_USB20_USB20_SUSPENDM ( BIT(9) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_USB20_USB20_PORN     ( BIT(8) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_USB20_USB20_RESET    ( BIT(7) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_USB20_USB20_BYPASS_FS ( BIT(6) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_USB20_USB20_BYPASS_IN_DM ( BIT(5) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_USB20_USB20_PS_PD_S  ( BIT(4) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_USB20_USB20_PS_PD_L  ( BIT(3) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_USB20_USB20_DMPULLUP ( BIT(2) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_USB20_USB20_DPPULLDOWN ( BIT(1) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_USB20_USB20_DMPULLDOWN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_RCO100M_RTC100M_CTRL, [0x403590B4] */
#define BIT_ANLG_PHY_G4_ANALOG_RCO100M_RTC100M_RESERVED(x)  ( (x) << 15 & (BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)) )
#define BIT_ANLG_PHY_G4_ANALOG_RCO100M_RTC100M_LDO_EN       ( BIT(14) )
#define BIT_ANLG_PHY_G4_ANALOG_RCO100M_RTC100M_LDO_BYPASS   ( BIT(13) )
#define BIT_ANLG_PHY_G4_ANALOG_RCO100M_RTC100M_LDO_VOLTAGE_SEL(x) ( (x) << 11 & (BIT(11)|BIT(12)) )
#define BIT_ANLG_PHY_G4_ANALOG_RCO100M_RTC100M_LDO_BIAS_SEL(x) ( (x) << 9  & (BIT(9)|BIT(10)) )
#define BIT_ANLG_PHY_G4_ANALOG_RCO100M_RTC100M_RC_C(x)      ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_RCO100M_RTC100M_EN           ( BIT(1) )
#define BIT_ANLG_PHY_G4_ANALOG_RCO100M_RTC100M_RSTB         ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_RCO100M_REG_SEL_CFG_0, [0x403590B8] */
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_RCO100M_RTC100M_RC_C ( BIT(2) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_RCO100M_RTC100M_EN   ( BIT(1) )
#define BIT_ANLG_PHY_G4_DBG_SEL_ANALOG_RCO100M_RTC100M_RSTB ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_USB20_IDDG, [0x403590BC] */
#define BIT_ANLG_PHY_G4_ANALOG_USB20_UTMIOTG_IDDG           ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_4L_ISO_SW_EN, [0x403590C0] */
#define BIT_ANLG_PHY_G4_ANALOG_MIPI_DSI_4LANE_DSI_ISO_SW_EN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_DVFS_0, [0x403590C4] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_RESERVED_DVFS_0(x) ( (x) << 12 & (BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_IBIAS_DVFS_0(x) ( (x) << 10 & (BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_POSTDIV_DVFS_0 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_KINT_DVFS_0(x) ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_NINT_DVFS_0(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_DVFS_1, [0x403590C8] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_RESERVED_DVFS_1(x) ( (x) << 12 & (BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_IBIAS_DVFS_1(x) ( (x) << 10 & (BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_POSTDIV_DVFS_1 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_KINT_DVFS_1(x) ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_NINT_DVFS_1(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_DVFS_2, [0x403590CC] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_RESERVED_DVFS_2(x) ( (x) << 12 & (BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_IBIAS_DVFS_2(x) ( (x) << 10 & (BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_POSTDIV_DVFS_2 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_KINT_DVFS_2(x) ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_NINT_DVFS_2(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_DVFS_3, [0x403590D0] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_RESERVED_DVFS_3(x) ( (x) << 12 & (BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_IBIAS_DVFS_3(x) ( (x) << 10 & (BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_POSTDIV_DVFS_3 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_KINT_DVFS_3(x) ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_NINT_DVFS_3(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_DVFS_4, [0x403590D4] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_RESERVED_DVFS_4(x) ( (x) << 12 & (BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_IBIAS_DVFS_4(x) ( (x) << 10 & (BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_POSTDIV_DVFS_4 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_KINT_DVFS_4(x) ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_NINT_DVFS_4(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_DVFS_5, [0x403590D8] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_RESERVED_DVFS_5(x) ( (x) << 12 & (BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_IBIAS_DVFS_5(x) ( (x) << 10 & (BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_POSTDIV_DVFS_5 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_KINT_DVFS_5(x) ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL0_NINT_DVFS_5(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_DVFS_0, [0x403590DC] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_RESERVED_DVFS_0(x) ( (x) << 12 & (BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_IBIAS_DVFS_0(x) ( (x) << 10 & (BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_POSTDIV_DVFS_0 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_KINT_DVFS_0(x) ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_NINT_DVFS_0(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_DVFS_1, [0x403590E0] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_RESERVED_DVFS_1(x) ( (x) << 12 & (BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_IBIAS_DVFS_1(x) ( (x) << 10 & (BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_POSTDIV_DVFS_1 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_KINT_DVFS_1(x) ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_NINT_DVFS_1(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_DVFS_2, [0x403590E4] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_RESERVED_DVFS_2(x) ( (x) << 12 & (BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_IBIAS_DVFS_2(x) ( (x) << 10 & (BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_POSTDIV_DVFS_2 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_KINT_DVFS_2(x) ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_NINT_DVFS_2(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_DVFS_3, [0x403590E8] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_RESERVED_DVFS_3(x) ( (x) << 12 & (BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_IBIAS_DVFS_3(x) ( (x) << 10 & (BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_POSTDIV_DVFS_3 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_KINT_DVFS_3(x) ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_NINT_DVFS_3(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_DVFS_4, [0x403590EC] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_RESERVED_DVFS_4(x) ( (x) << 12 & (BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_IBIAS_DVFS_4(x) ( (x) << 10 & (BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_POSTDIV_DVFS_4 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_KINT_DVFS_4(x) ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_NINT_DVFS_4(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_DVFS_5, [0x403590F0] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_RESERVED_DVFS_5(x) ( (x) << 12 & (BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_IBIAS_DVFS_5(x) ( (x) << 10 & (BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_POSTDIV_DVFS_5 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_KINT_DVFS_5(x) ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL1_NINT_DVFS_5(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_DVFS_0, [0x403590F4] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_RESERVED_DVFS_0(x) ( (x) << 12 & (BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_IBIAS_DVFS_0(x) ( (x) << 10 & (BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_POSTDIV_DVFS_0 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_KINT_DVFS_0(x) ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_NINT_DVFS_0(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_DVFS_1, [0x403590F8] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_RESERVED_DVFS_1(x) ( (x) << 12 & (BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_IBIAS_DVFS_1(x) ( (x) << 10 & (BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_POSTDIV_DVFS_1 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_KINT_DVFS_1(x) ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_NINT_DVFS_1(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_DVFS_2, [0x403590FC] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_RESERVED_DVFS_2(x) ( (x) << 12 & (BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_IBIAS_DVFS_2(x) ( (x) << 10 & (BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_POSTDIV_DVFS_2 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_KINT_DVFS_2(x) ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_NINT_DVFS_2(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_DVFS_3, [0x40359100] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_RESERVED_DVFS_3(x) ( (x) << 12 & (BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_IBIAS_DVFS_3(x) ( (x) << 10 & (BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_POSTDIV_DVFS_3 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_KINT_DVFS_3(x) ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_NINT_DVFS_3(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_DVFS_4, [0x40359104] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_RESERVED_DVFS_4(x) ( (x) << 12 & (BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_IBIAS_DVFS_4(x) ( (x) << 10 & (BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_POSTDIV_DVFS_4 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_KINT_DVFS_4(x) ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_NINT_DVFS_4(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* bits definitions for REG_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_DVFS_5, [0x40359108] */
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_RESERVED_DVFS_5(x) ( (x) << 12 & (BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_IBIAS_DVFS_5(x) ( (x) << 10 & (BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_POSTDIV_DVFS_5 ( BIT(9) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_KINT_DVFS_5(x) ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G4_ANALOG_MPLL_THM_TOP_MPLL2_NINT_DVFS_5(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* vars definitions for controller CTL_ANLG_PHY_G4 */


#endif /* __ANLG_PHY_G4_H____ */
