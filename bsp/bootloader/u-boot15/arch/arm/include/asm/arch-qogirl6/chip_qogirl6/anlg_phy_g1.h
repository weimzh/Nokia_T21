/*
 * Copyright (C) 2018 Unigroup Spreadtrum & RDA Technologies Co., Ltd.
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 ********************************************************************
 * Auto generated c code from ASIC Documentation, PLEASE DONOT EDIT *
 ********************************************************************
 */

/*
 * SVN URL      : http://shsvn06/svn/CHIP/Interface/SharkL6/Autoreg/Analog/Analog_G1 Control Register.xls;Analog_G1
 *     Revision : 218757
 *     Author   : {author}
 *     Date     : {date}
 */

#ifndef __ANLG_PHY_G1_H____
#define __ANLG_PHY_G1_H____

/* Some defs, in case these are not defined elsewhere */
#ifndef SCI_IOMAP
#define SCI_IOMAP(_b_) ( (_b_) )
#endif

#ifndef SCI_ADDR
#define SCI_ADDR(_b_, _o_) ( (_b_) + (_o_) )
#endif

#ifndef CTL_ANLG_PHY_G1_BASE
#define CTL_ANLG_PHY_G1_BASE            SCI_IOMAP(0x64560000)
#endif

/* registers definitions for CTL_ANLG_PHY_G1, 0x64560000 */
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXCLKLANE SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0000)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_0 SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0004)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_1 SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0008)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_2 SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x000C)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_3 SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0010)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATAESC SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0014)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_STATE_RX SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0018)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_ERR    SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x001C)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_CTRL   SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0020)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_RSVD   SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0024)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TEST   SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0028)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_DATALANE_CTRL SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x002C)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_MIPI_CTRL7    SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0030)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ISO_SW    SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0034)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_REG_SEL_CFG_0 SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0038)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_REG_SEL_CFG_1 SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x003C)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_ANA_MPHY_CTRL2 SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0040)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_RX_HIBERN8_REG SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0044)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_ATT_REG SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0048)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_STATUS_REG SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x004C)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_TEST_REG SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0050)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_TEST_REG_1 SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0054)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_EFUSE_REG SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0058)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_POWER_REG SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x005C)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_RESERVED_REG SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0060)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_APB_REG  SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0064)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_APB_REG_1 SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0068)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_EN SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x006C)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_EN SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0070)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_EN SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0074)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_EN SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0078)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_SPI_START SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x007C)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_UPDATE SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0080)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_INLINE SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0084)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_WRN SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0088)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_ADDR SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x008C)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_WRDATA SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0090)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_RDYN SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0094)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_RDDATA SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0098)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_UPDATE SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x009C)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_INLINE SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00A0)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_WRN SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00A4)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_ADDR SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00A8)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_WRDATA SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00AC)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_RDYN SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00B0)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_RDDATA SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00B4)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_UPDATE SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00B8)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_INLINE SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00BC)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_WRN SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00C0)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_ADDR SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00C4)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_WRDATA SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00C8)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_RDYN SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00CC)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_RDDATA SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00D0)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_UPDATE SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00D4)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_INLINE SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00D8)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_WRN SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00DC)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_ADDR SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00E0)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_WRDATA SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00E4)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_RDYN SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00E8)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_RDDATA SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00EC)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_REG_SEL_CFG_0 SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x00F0)

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXCLKLANE, [0x64560000] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTHSCLK ( BIT(4) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSCLK ( BIT(3) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXITCLK ( BIT(2) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATECLK ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ULPSACTIVENOTCLK ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_0, [0x64560004] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_0 ( BIT(10) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_0 ( BIT(9) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_0 ( BIT(8) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_0 ( BIT(7) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_0 ( BIT(6) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_0(x) ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_0 ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREADYESC_0 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_1, [0x64560008] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_1 ( BIT(10) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_1 ( BIT(9) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_1 ( BIT(8) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_1 ( BIT(7) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_1 ( BIT(6) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_1(x) ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_1 ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREADYESC_1 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_2, [0x6456000C] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_2 ( BIT(10) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_2 ( BIT(9) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_2 ( BIT(8) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_2 ( BIT(7) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_2 ( BIT(6) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_2(x) ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_2 ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREADYESC_2 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_3, [0x64560010] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_3 ( BIT(10) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_3 ( BIT(9) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_3 ( BIT(8) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_3 ( BIT(7) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_3 ( BIT(6) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_3(x) ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_3 ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREADYESC_3 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATAESC, [0x64560014] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_0(x) ( (x) << 24 & (BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_1(x) ( (x) << 16 & (BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_2(x) ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_3(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_STATE_RX, [0x64560018] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXLPDTESC_0 ( BIT(23) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXTRIGGERESC_0(x) ( (x) << 19 & (BIT(19)|BIT(20)|BIT(21)|BIT(22)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXVALIDESC_0 ( BIT(18) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXLPDTESC_1 ( BIT(17) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXTRIGGERESC_1(x) ( (x) << 13 & (BIT(13)|BIT(14)|BIT(15)|BIT(16)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXVALIDESC_1 ( BIT(12) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXLPDTESC_2 ( BIT(11) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXTRIGGERESC_2(x) ( (x) << 7  & (BIT(7)|BIT(8)|BIT(9)|BIT(10)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXVALIDESC_2 ( BIT(6) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXLPDTESC_3 ( BIT(5) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXTRIGGERESC_3(x) ( (x) << 1  & (BIT(1)|BIT(2)|BIT(3)|BIT(4)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXVALIDESC_3 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_ERR, [0x6456001C] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRESC_0  ( BIT(19) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRSYNCESC_0 ( BIT(18) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTROL_0 ( BIT(17) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP0_0 ( BIT(16) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP1_0 ( BIT(15) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRESC_1  ( BIT(14) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRSYNCESC_1 ( BIT(13) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTROL_1 ( BIT(12) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP0_1 ( BIT(11) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP1_1 ( BIT(10) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRESC_2  ( BIT(9) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRSYNCESC_2 ( BIT(8) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTROL_2 ( BIT(7) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP0_2 ( BIT(6) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP1_2 ( BIT(5) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRESC_3  ( BIT(4) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRSYNCESC_3 ( BIT(3) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTROL_3 ( BIT(2) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP0_3 ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP1_3 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_CTRL, [0x64560020] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_PS_PD_S   ( BIT(21) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_PS_PD_L   ( BIT(20) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_SHUTDOWNZ ( BIT(19) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RSTZ      ( BIT(18) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_0  ( BIT(17) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_1  ( BIT(16) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_2  ( BIT(15) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_3  ( BIT(14) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ENABLECLK ( BIT(13) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_FORCEPLL  ( BIT(12) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_PLLLOCK   ( BIT(11) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_BISTON    ( BIT(10) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_BISTDONE  ( BIT(9) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_IF_SEL    ( BIT(8) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TRIMBG(x) ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TX_RCTL(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_RSVD, [0x64560024] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RESERVED(x) ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RESERVEDO(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TEST, [0x64560028] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TESTDIN(x) ( (x) << 11 & (BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TESTDOUT(x) ( (x) << 3  & (BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TESTEN    ( BIT(2) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TESTCLK   ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TESTCLR   ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_DATALANE_CTRL, [0x6456002C] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_0 ( BIT(22) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_DIRECTION_0 ( BIT(21) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TURNDISABLE_0 ( BIT(20) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_FORCERXMODE_0 ( BIT(19) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_FORCETXSTOPMODE_0 ( BIT(18) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATEDATA_0 ( BIT(17) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_1 ( BIT(16) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TURNDISABLE_1 ( BIT(15) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_FORCERXMODE_1 ( BIT(14) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_FORCETXSTOPMODE_1 ( BIT(13) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATEDATA_1 ( BIT(12) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_2 ( BIT(11) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_DIRECTION_2 ( BIT(10) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TURNDISABLE_2 ( BIT(9) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_FORCERXMODE_2 ( BIT(8) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_FORCETXSTOPMODE_2 ( BIT(7) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATEDATA_2 ( BIT(6) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_3 ( BIT(5) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_DIRECTION_3 ( BIT(4) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TURNDISABLE_3 ( BIT(3) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_FORCERXMODE_3 ( BIT(2) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_FORCETXSTOPMODE_3 ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATEDATA_3 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_MIPI_CTRL7, [0x64560030] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXSKEWCALHS_0 ( BIT(3) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXSKEWCALHS_1 ( BIT(2) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXSKEWCALHS_2 ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXSKEWCALHS_3 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ISO_SW, [0x64560034] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_DIV6CLK_GATEEN ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ISO_SW_EN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_REG_SEL_CFG_0, [0x64560038] */
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTHSCLK ( BIT(31) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSCLK ( BIT(30) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXITCLK ( BIT(29) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_0 ( BIT(28) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_0 ( BIT(27) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_0 ( BIT(26) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_0 ( BIT(25) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_0 ( BIT(24) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_0 ( BIT(23) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_0 ( BIT(22) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_1 ( BIT(21) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_1 ( BIT(20) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_1 ( BIT(19) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_1 ( BIT(18) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_2 ( BIT(17) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_2 ( BIT(16) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_2 ( BIT(15) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_2 ( BIT(14) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_3 ( BIT(13) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_3 ( BIT(12) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_3 ( BIT(11) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_3 ( BIT(10) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_0 ( BIT(9) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_PS_PD_S ( BIT(8) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_PS_PD_L ( BIT(7) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_SHUTDOWNZ ( BIT(6) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_RSTZ ( BIT(5) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_0 ( BIT(4) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_1 ( BIT(3) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_2 ( BIT(2) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_3 ( BIT(1) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLECLK ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_REG_SEL_CFG_1, [0x6456003C] */
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_FORCEPLL ( BIT(10) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TESTDIN ( BIT(9) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TESTEN ( BIT(8) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TESTCLK ( BIT(7) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TESTCLR ( BIT(6) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_0 ( BIT(5) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXSKEWCALHS_0 ( BIT(4) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXSKEWCALHS_1 ( BIT(3) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXSKEWCALHS_2 ( BIT(2) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXSKEWCALHS_3 ( BIT(1) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ISO_SW_EN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_ANA_MPHY_CTRL2, [0x64560040] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_MAIN_RESET_1 ( BIT(22) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_RESET_1 ( BIT(21) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_LINERESET_1 ( BIT(20) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_RX_MAIN_RESET_1 ( BIT(19) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_RX_RESET_1 ( BIT(18) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_RX_LINERESET_1 ( BIT(17) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_CFGCLK_FREQ(x) ( (x) << 9  & (BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_REFCLKON ( BIT(8) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_MAIN_RESET_0 ( BIT(7) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_RESET_0 ( BIT(6) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_LINERESET_0 ( BIT(5) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_RX_MAIN_RESET_0 ( BIT(4) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_RX_RESET_0 ( BIT(3) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_RX_LINERESET_0 ( BIT(2) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_RESET ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_ATTRRESET ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_RX_HIBERN8_REG, [0x64560044] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_RX_HIBERN8EXIT_TYPEI_0 ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_RX_HIBERN8EXIT_TYPEI_1 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_ATT_REG, [0x64560048] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_ATTRID(x) ( (x) << 12 & (BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_ATTRWRVAL(x) ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_ATTRWRN ( BIT(3) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_CFGENBL ( BIT(2) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_INLNCFG ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_CFGUPDT ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_STATUS_REG, [0x6456004C] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_ATTRRDVAL(x) ( (x) << 1  & (BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_CFGRDYN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_TEST_REG, [0x64560050] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_DIFNDRIVE_0 ( BIT(25) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_CONTROLLED_ACTTIMER_0 ( BIT(24) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_TST_RTCONTROL_0(x) ( (x) << 16 & (BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_RX_TST_RTCONTROL_0(x) ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_TST_RTCONTROL(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_TEST_REG_1, [0x64560054] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_DIFNDRIVE_1 ( BIT(17) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_CONTROLLED_ACTTIMER_1 ( BIT(16) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_TST_RTCONTROL_1(x) ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_RX_TST_RTCONTROL_1(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_EFUSE_REG, [0x64560058] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_TRIMBG(x) ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_TRIMTXTERM(x) ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_TRIMRXTERM(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_POWER_REG, [0x6456005C] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_PS_PD_L  ( BIT(3) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_PS_PD_S  ( BIT(2) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_ISO_SW_EN ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_ANA_POWERDOWN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_RESERVED_REG, [0x64560060] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_RESERVEDI(x) ( (x) << 16 & (0xFFFF0000) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_RESERVEDO(x) ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_APB_REG, [0x64560064] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_TST_RTOBSERVE_0(x) ( (x) << 16 & (BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_RX_TST_RTOBSERVE_0(x) ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_TST_RTOBSERVE(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_APB_REG_1, [0x64560068] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_INI_DONE ( BIT(20) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_TST_RTOBSERVE_1(x) ( (x) << 12 & (BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_RX_TST_RTOBSERVE_1(x) ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_APB_PRESETN ( BIT(3) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_BISTON   ( BIT(2) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_BISTDONE ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_MPHY_BISTOK   ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_EN, [0x6456006C] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_EN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_EN, [0x64560070] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_EN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_EN, [0x64560074] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_EN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_EN, [0x64560078] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_EN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_SPI_START, [0x6456007C] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_SPI_START ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_UPDATE, [0x64560080] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_UPDATE ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_INLINE, [0x64560084] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_INLINE ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_WRN, [0x64560088] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_WRN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_ADDR, [0x6456008C] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_ADDR(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_WRDATA, [0x64560090] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_WRDATA(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_RDYN, [0x64560094] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_RDYN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_RDDATA, [0x64560098] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_0_SPI_RDDATA(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_UPDATE, [0x6456009C] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_UPDATE ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_INLINE, [0x645600A0] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_INLINE ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_WRN, [0x645600A4] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_WRN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_ADDR, [0x645600A8] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_ADDR(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_WRDATA, [0x645600AC] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_WRDATA(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_RDYN, [0x645600B0] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_RDYN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_RDDATA, [0x645600B4] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_TX_1_SPI_RDDATA(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_UPDATE, [0x645600B8] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_UPDATE ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_INLINE, [0x645600BC] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_INLINE ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_WRN, [0x645600C0] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_WRN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_ADDR, [0x645600C4] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_ADDR(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_WRDATA, [0x645600C8] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_WRDATA(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_RDYN, [0x645600CC] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_RDYN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_RDDATA, [0x645600D0] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_0_SPI_RDDATA(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_UPDATE, [0x645600D4] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_UPDATE ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_INLINE, [0x645600D8] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_INLINE ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_WRN, [0x645600DC] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_WRN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_ADDR, [0x645600E0] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_ADDR(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_WRDATA, [0x645600E4] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_WRDATA(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_RDYN, [0x645600E8] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_RDYN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_RDDATA, [0x645600EC] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_APB2RMMI_BRIDGE_RX_1_SPI_RDDATA(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_MPHY_2T2R_REG_SEL_CFG_0, [0x645600F0] */
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_MAIN_RESET_1 ( BIT(24) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_RESET_1 ( BIT(23) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_LINERESET_1 ( BIT(22) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_RX_MAIN_RESET_1 ( BIT(21) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_RX_RESET_1 ( BIT(20) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_CFGCLK_FREQ ( BIT(19) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_REFCLKON ( BIT(18) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_MAIN_RESET_0 ( BIT(17) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_RESET_0 ( BIT(16) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_TX_LINERESET_0 ( BIT(15) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_RX_MAIN_RESET_0 ( BIT(14) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_RX_RESET_0 ( BIT(13) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_RESET ( BIT(12) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_ATTRRESET ( BIT(11) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_ATTRID ( BIT(10) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_ATTRWRVAL ( BIT(9) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_ATTRWRN ( BIT(8) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_CFGENBL ( BIT(7) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_INLNCFG ( BIT(6) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_CB_CFGUPDT ( BIT(5) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_PS_PD_L ( BIT(4) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_PS_PD_S ( BIT(3) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_ISO_SW_EN ( BIT(2) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_ANA_POWERDOWN ( BIT(1) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_MPHY_2T2R_MPHY_RESERVEDI ( BIT(0) )

/* vars definitions for controller CTL_ANLG_PHY_G1 */


#endif /* __ANLG_PHY_G1_H____ */
