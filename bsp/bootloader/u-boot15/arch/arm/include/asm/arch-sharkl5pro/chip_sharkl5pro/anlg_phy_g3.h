/*
 * Copyright (C) 2018 Unigroup Spreadtrum & RDA Technologies Co., Ltd.
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 ********************************************************************
 * Auto generated c code from ASIC Documentation, PLEASE DONOT EDIT *
 ********************************************************************
 */

#ifndef __ANLG_PHY_G3_H____
#define __ANLG_PHY_G3_H____

/* Some defs, in case these are not defined elsewhere */
#ifndef SCI_IOMAP
#define SCI_IOMAP(_b_) ( (_b_) )
#endif

#ifndef SCI_ADDR
#define SCI_ADDR(_b_, _o_) ( (_b_) + (_o_) )
#endif

#ifndef CTL_ANLG_PHY_G3_BASE
#define CTL_ANLG_PHY_G3_BASE            SCI_IOMAP(0x323C0000)
#endif

/* registers definitions for CTL_ANLG_PHY_G3, 0x323C0000 */
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_CTRL0            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0000)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_CTRL1            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0004)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_PLL_CLK_CTRL          SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0008)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_PERFOR           SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x000C)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_CTRL2            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0010)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_RESERVED         SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0014)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_BIST_CTRL        SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0018)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_ANA_BB_PWR_CTRL       SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x001C)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_ANA_BB_26M_BUF        SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0020)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_ANA_BB_EN_CTRL        SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0024)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_ANALOG_TEST           SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0028)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_AAPC_CTRL1            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x002C)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_AAPC_CTRL2            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0030)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_ANA_BB_RSVD           SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0034)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_RTC100M_CTRL          SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0038)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_TEST_CLK_CTRL         SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x003C)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_BB_TOP_TEST_0         SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0040)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_BB_TOP_TEST_1         SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0044)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_ISPPLL_CTRL0          SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0048)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_REG_SEL_CFG_0         SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x004C)
#define REG_ANLG_PHY_G3_ANALOG_BB_TOP_REG_SEL_CFG_1         SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0050)
#define REG_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CTRL0            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0054)
#define REG_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CTRL1            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0058)
#define REG_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CTRL2            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x005C)
#define REG_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CTRL3            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0060)
#define REG_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CTRL4            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0064)
#define REG_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CTRL5            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0068)
#define REG_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CTRL6            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x006C)
#define REG_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CTRL7            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0070)
#define REG_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CTRL8            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0074)
#define REG_ANLG_PHY_G3_ANALOG_MPLL0_ANANKE_BIG_DVFS_INDEX0 SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0078)
#define REG_ANLG_PHY_G3_ANALOG_MPLL0_ANANKE_BIG_DVFS_INDEX1 SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x007C)
#define REG_ANLG_PHY_G3_ANALOG_MPLL0_ANANKE_BIG_DVFS_INDEX2 SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0080)
#define REG_ANLG_PHY_G3_ANALOG_MPLL0_ANANKE_BIG_DVFS_INDEX3 SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0084)
#define REG_ANLG_PHY_G3_ANALOG_MPLL0_ANANKE_BIG_DVFS_INDEX4 SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0088)
#define REG_ANLG_PHY_G3_ANALOG_MPLL0_ANANKE_BIG_DVFS_INDEX5 SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x008C)
#define REG_ANLG_PHY_G3_ANALOG_MPLL0_ANANKE_BIG_DVFS_INDEX6 SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0090)
#define REG_ANLG_PHY_G3_ANALOG_MPLL0_ANANKE_BIG_DVFS_INDEX7 SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0094)
#define REG_ANLG_PHY_G3_ANALOG_MPLL0_REG_SEL_CFG_0          SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x0098)
#define REG_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CTRL0            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x009C)
#define REG_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CTRL1            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x00A0)
#define REG_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CTRL2            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x00A4)
#define REG_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CTRL3            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x00A8)
#define REG_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CTRL4            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x00AC)
#define REG_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CTRL5            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x00B0)
#define REG_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CTRL6            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x00B4)
#define REG_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CTRL7            SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x00B8)
#define REG_ANLG_PHY_G3_ANALOG_MPLL2_SCU_DVFS_INDEX0        SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x00BC)
#define REG_ANLG_PHY_G3_ANALOG_MPLL2_SCU_DVFS_INDEX1        SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x00C0)
#define REG_ANLG_PHY_G3_ANALOG_MPLL2_SCU_DVFS_INDEX2        SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x00C4)
#define REG_ANLG_PHY_G3_ANALOG_MPLL2_SCU_DVFS_INDEX3        SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x00C8)
#define REG_ANLG_PHY_G3_ANALOG_MPLL2_SCU_DVFS_INDEX4        SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x00CC)
#define REG_ANLG_PHY_G3_ANALOG_MPLL2_SCU_DVFS_INDEX5        SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x00D0)
#define REG_ANLG_PHY_G3_ANALOG_MPLL2_SCU_DVFS_INDEX6        SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x00D4)
#define REG_ANLG_PHY_G3_ANALOG_MPLL2_SCU_DVFS_INDEX7        SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x00D8)
#define REG_ANLG_PHY_G3_ANALOG_MPLL2_REG_SEL_CFG_0          SCI_ADDR(CTL_ANLG_PHY_G3_BASE, 0x00DC)

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_CTRL0, [0x323C0000] */
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_LOCK_DONE        ( BIT(18) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_REF_SEL(x)       ( (x) << 16 & (BIT(16)|BIT(17)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_N(x)             ( (x) << 5  & (BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_ICP(x)           ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_SDM_EN           ( BIT(1) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_DIV_S            ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_CTRL1, [0x323C0004] */
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_NINT(x)          ( (x) << 23 & (BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_KINT(x)          ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_PLL_CLK_CTRL, [0x323C0008] */
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_SINEO_RPLL_CLKOUT_EN  ( BIT(25) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_26M_SEL          ( BIT(24) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_VSET(x)          ( (x) << 21 & (BIT(21)|BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_26M_DIV(x)       ( (x) << 15 & (BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_DIV_EN           ( BIT(14) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_POSTDIV          ( BIT(13) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_FREQ_DOUBLE_EN   ( BIT(12) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_SSC_CTRL(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_MOD_EN           ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_CLKOUT_EN        ( BIT(2) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_RST              ( BIT(1) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_PD               ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_PERFOR, [0x323C000C] */
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_CP_EN            ( BIT(8) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_LDO_TRIM(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_VCO_TEST_EN      ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_FBDIV_EN         ( BIT(2) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_CP_OFFSET(x)     ( (x) << 0  & (BIT(0)|BIT(1)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_CTRL2, [0x323C0010] */
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_IBIAS(x)         ( (x) << 3  & (BIT(3)|BIT(4)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_LPF(x)           ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_RESERVED, [0x323C0014] */
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_RESERVED(x)      ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_BIST_CTRL, [0x323C0018] */
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_BIST_CTRL(x)     ( (x) << 17 & (BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_BIST_EN          ( BIT(16) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_BIST_CNT(x)      ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_ANA_BB_PWR_CTRL, [0x323C001C] */
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_S_AAPC_PD             ( BIT(1) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_M_AAPC_PD             ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_ANA_BB_26M_BUF, [0x323C0020] */
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_REC_26MHZ_0_BUF_PD    ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_ANA_BB_EN_CTRL, [0x323C0024] */
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_CLK26MHZ_AUD_EN       ( BIT(20) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_PROBE_SEL(x)          ( (x) << 14 & (BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_SINDRV_ENA            ( BIT(13) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_SINDRV_ENA_SQUARE     ( BIT(12) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_REC_26MHZ_SR_TRIM(x)  ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_REC_26MHZ_0_CUR_SEL(x) ( (x) << 6  & (BIT(6)|BIT(7)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_CLK26M_RESERVED(x)    ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_SINE_DRV_SEL          ( BIT(1) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_BB_CON_BG             ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_ANALOG_TEST, [0x323C0028] */
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_ANALOG_TESTMUX(x)     ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_AAPC_CTRL1, [0x323C002C] */
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_AAPC_G0(x)            ( (x) << 24 & (BIT(24)|BIT(25)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_AAPC_G1(x)            ( (x) << 22 & (BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_AAPC_G2(x)            ( (x) << 20 & (BIT(20)|BIT(21)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_S_AAPC_LOW_V_CON      ( BIT(19) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_S_AAPC_D(x)           ( (x) << 5  & (BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_S_AAPC_BPRES          ( BIT(4) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_S_APCOUT_SEL(x)       ( (x) << 2  & (BIT(2)|BIT(3)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_S_AAPC_RESERVED(x)    ( (x) << 0  & (BIT(0)|BIT(1)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_AAPC_CTRL2, [0x323C0030] */
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_M_AAPC_D(x)           ( (x) << 6  & (BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_M_AAPC_LOW_V_CON      ( BIT(5) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_M_AAPC_BPRES          ( BIT(4) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_M_APCOUT_SEL(x)       ( (x) << 2  & (BIT(2)|BIT(3)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_M_AAPC_RESERVED(x)    ( (x) << 0  & (BIT(0)|BIT(1)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_ANA_BB_RSVD, [0x323C0034] */
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_ANA_BB_RESERVED(x)    ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_TO_LVDS_SEL(x)        ( (x) << 0  & (BIT(0)|BIT(1)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_RTC100M_CTRL, [0x323C0038] */
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RTC100M_RSTB          ( BIT(22) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RTC100M_EN            ( BIT(21) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RTC100M_RESERVED(x)   ( (x) << 13 & (BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RTC100M_LDO_EN        ( BIT(12) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RTC100M_LDO_BYPASS    ( BIT(11) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RTC100M_LDO_VOLTAGE_SEL(x) ( (x) << 9  & (BIT(9)|BIT(10)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RTC100M_LDO_BIAS_SEL(x) ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RTC100M_RC_C(x)       ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_TEST_CLK_CTRL, [0x323C003C] */
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_TEST_CLK_EN           ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_TEST_CLK_OD           ( BIT(2) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_TEST_CLK_DIV(x)       ( (x) << 0  & (BIT(0)|BIT(1)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_BB_TOP_TEST_0, [0x323C0040] */
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_AAPC_MAX_RANGE(x)     ( (x) << 15 & (BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_AAPC_MIN_RANGE(x)     ( (x) << 1  & (BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_AAPC_RSTN             ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_BB_TOP_TEST_1, [0x323C0044] */
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_AAPC_STEP_SEL(x)      ( (x) << 6  & (BIT(6)|BIT(7)|BIT(8)|BIT(9)) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_AAPC_RAMP_GEN_SEL     ( BIT(5) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_PD_SEL_RFTI_OR_PMU ( BIT(4) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RPLL_RST_SEL_RFTI_OR_PMU ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_DBG_SEL_RTC100M_LDO_EN ( BIT(2) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_DBG_SEL_RTC100M_LDO_BYPASS ( BIT(1) )
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_RCO100M_POWER_MODE_SEL ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_ISPPLL_CTRL0, [0x323C0048] */
#define BIT_ANLG_PHY_G3_ANALOG_BB_TOP_BB_BG_RBIAS_MODE      ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_REG_SEL_CFG_0, [0x323C004C] */
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RPLL_REF_SEL  ( BIT(31) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RPLL_N        ( BIT(30) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RPLL_SDM_EN   ( BIT(29) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RPLL_DIV_S    ( BIT(28) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RPLL_NINT     ( BIT(27) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RPLL_KINT     ( BIT(26) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RPLL_26M_DIV  ( BIT(25) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RPLL_DIV_EN   ( BIT(24) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RPLL_MOD_EN   ( BIT(23) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RPLL_CLKOUT_EN ( BIT(22) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RPLL_RST      ( BIT(21) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RPLL_PD       ( BIT(20) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RPLL_IBIAS    ( BIT(19) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RPLL_LPF      ( BIT(18) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RPLL_RESERVED ( BIT(17) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RPLL_BIST_CTRL ( BIT(16) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RPLL_BIST_EN  ( BIT(15) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_S_AAPC_PD     ( BIT(14) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_M_AAPC_PD     ( BIT(13) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_REC_26MHZ_0_BUF_PD ( BIT(12) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_CLK26MHZ_AUD_EN ( BIT(11) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_SINDRV_ENA    ( BIT(10) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_SINDRV_ENA_SQUARE ( BIT(9) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_AAPC_G0       ( BIT(8) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_AAPC_G1       ( BIT(7) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_AAPC_G2       ( BIT(6) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_S_AAPC_LOW_V_CON ( BIT(5) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_S_AAPC_D      ( BIT(4) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_S_AAPC_BPRES  ( BIT(3) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_S_APCOUT_SEL  ( BIT(2) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_S_AAPC_RESERVED ( BIT(1) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_M_AAPC_D      ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_BB_TOP_REG_SEL_CFG_1, [0x323C0050] */
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_M_AAPC_LOW_V_CON ( BIT(6) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_M_AAPC_BPRES  ( BIT(5) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_M_APCOUT_SEL  ( BIT(4) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_M_AAPC_RESERVED ( BIT(3) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RTC100M_RSTB  ( BIT(2) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RTC100M_EN    ( BIT(1) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_BB_TOP_RTC100M_RC_C  ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CTRL0, [0x323C0054] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_LOCK_DONE        ( BIT(17) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CLKIN_SEL        ( BIT(16) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_N(x)             ( (x) << 5  & (BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_ICP(x)           ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_SDM_EN           ( BIT(1) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_DIV_S            ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CTRL1, [0x323C0058] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_NINT(x)          ( (x) << 23 & (BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_KINT(x)          ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CTRL2, [0x323C005C] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_DIV32_EN         ( BIT(14) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_POSTDIV          ( BIT(13) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_FREQ_DOUBLE_EN   ( BIT(12) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CCS_CTRL(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_MOD_EN           ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CLKOUT_EN        ( BIT(2) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_RST              ( BIT(1) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_PD               ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CTRL3, [0x323C0060] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_R2_SEL(x)        ( (x) << 22 & (BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_R3_SEL(x)        ( (x) << 20 & (BIT(20)|BIT(21)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_C1_SEL(x)        ( (x) << 18 & (BIT(18)|BIT(19)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_C2_SEL(x)        ( (x) << 16 & (BIT(16)|BIT(17)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_KVCO_SEL(x)      ( (x) << 14 & (BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_VCO_TEST_INTSEL(x) ( (x) << 11 & (BIT(11)|BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_VCO_TEST_INT     ( BIT(10) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CP_EN            ( BIT(9) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_LDO_TRIM(x)      ( (x) << 5  & (BIT(5)|BIT(6)|BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_VCO_TEST_EN      ( BIT(4) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_FBDIV_EN         ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CP_OFFSET(x)     ( (x) << 1  & (BIT(1)|BIT(2)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_VCOBUF_EN        ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CTRL4, [0x323C0064] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_RESERVED(x)      ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CTRL5, [0x323C0068] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_BIST_CTRL(x)     ( (x) << 17 & (BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_BIST_EN          ( BIT(16) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_BIST_CNT(x)      ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CTRL6, [0x323C006C] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_26MBUFFER_PD     ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CTRL7, [0x323C0070] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CALI_MODE(x)     ( (x) << 17 & (BIT(17)|BIT(18)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CALI_INI(x)      ( (x) << 12 & (BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CALI_TRIG        ( BIT(11) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_FREQ_DIFF_EN     ( BIT(10) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CALI_WAITCNT(x)  ( (x) << 8  & (BIT(8)|BIT(9)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CALI_POLARITY    ( BIT(7) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CALI_DONE        ( BIT(6) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CALI_OUT(x)      ( (x) << 1  & (BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CALI_CPPD        ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CTRL8, [0x323C0074] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_VCTRLH_SEL(x)    ( (x) << 17 & (BIT(17)|BIT(18)|BIT(19)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_VCTRLL_SEL(x)    ( (x) << 14 & (BIT(14)|BIT(15)|BIT(16)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_RG_CLOSELOOP_EN  ( BIT(13) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_VCO_BANK_SEL(x)  ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CALI_VCTRL_HIGH  ( BIT(7) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_CALI_VCTRL_LOW   ( BIT(6) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_VCO_BANK_SEL_OFFSET ( BIT(5) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_ADJ_MANUAL_PD    ( BIT(4) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_ISO_SW_EN        ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_TEST_CLK_EN            ( BIT(2) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_TEST_SEL               ( BIT(1) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_26MBUFFER_CLKOUT_EN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL0_ANANKE_BIG_DVFS_INDEX0, [0x323C0078] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_N_INDEX0(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_POSTDIV_INDEX0   ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_ICP_INDEX0(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL0_ANANKE_BIG_DVFS_INDEX1, [0x323C007C] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_N_INDEX1(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_POSTDIV_INDEX1   ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_ICP_INDEX1(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL0_ANANKE_BIG_DVFS_INDEX2, [0x323C0080] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_N_INDEX2(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_POSTDIV_INDEX2   ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_ICP_INDEX2(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL0_ANANKE_BIG_DVFS_INDEX3, [0x323C0084] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_N_INDEX3(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_POSTDIV_INDEX3   ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_ICP_INDEX3(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL0_ANANKE_BIG_DVFS_INDEX4, [0x323C0088] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_N_INDEX4(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_POSTDIV_INDEX4   ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_ICP_INDEX4(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL0_ANANKE_BIG_DVFS_INDEX5, [0x323C008C] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_N_INDEX5(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_POSTDIV_INDEX5   ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_ICP_INDEX5(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL0_ANANKE_BIG_DVFS_INDEX6, [0x323C0090] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_N_INDEX6(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_POSTDIV_INDEX6   ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_ICP_INDEX6(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL0_ANANKE_BIG_DVFS_INDEX7, [0x323C0094] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_N_INDEX7(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_POSTDIV_INDEX7   ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL0_MPLL0_ICP_INDEX7(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL0_REG_SEL_CFG_0, [0x323C0098] */
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_MPLL0_MPLL0_N        ( BIT(7) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_MPLL0_MPLL0_ICP      ( BIT(6) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_MPLL0_MPLL0_DIV32_EN ( BIT(5) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_MPLL0_MPLL0_POSTDIV  ( BIT(4) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_MPLL0_MPLL0_CLKOUT_EN ( BIT(3) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_MPLL0_MPLL0_RST      ( BIT(2) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_MPLL0_MPLL0_PD       ( BIT(1) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_MPLL0_MPLL0_26MBUFFER_PD ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CTRL0, [0x323C009C] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_LOCK_DONE        ( BIT(16) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_N(x)             ( (x) << 5  & (BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_ICP(x)           ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_SDM_EN           ( BIT(1) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_DIV_S            ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CTRL1, [0x323C00A0] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_NINT(x)          ( (x) << 23 & (BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_KINT(x)          ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CTRL2, [0x323C00A4] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_DIV32_EN         ( BIT(14) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_POSTDIV          ( BIT(13) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_FREQ_DOUBLE_EN   ( BIT(12) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CCS_CTRL(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_MOD_EN           ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CLKOUT_EN        ( BIT(2) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_RST              ( BIT(1) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_PD               ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CTRL3, [0x323C00A8] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_R2_SEL(x)        ( (x) << 22 & (BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_R3_SEL(x)        ( (x) << 20 & (BIT(20)|BIT(21)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_C1_SEL(x)        ( (x) << 18 & (BIT(18)|BIT(19)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_C2_SEL(x)        ( (x) << 16 & (BIT(16)|BIT(17)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_KVCO_SEL(x)      ( (x) << 14 & (BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_VCO_TEST_INTSEL(x) ( (x) << 11 & (BIT(11)|BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_VCO_TEST_INT     ( BIT(10) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CP_EN            ( BIT(9) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_LDO_TRIM(x)      ( (x) << 5  & (BIT(5)|BIT(6)|BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_VCO_TEST_EN      ( BIT(4) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_FBDIV_EN         ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CP_OFFSET(x)     ( (x) << 1  & (BIT(1)|BIT(2)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_VCOBUF_EN        ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CTRL4, [0x323C00AC] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_RESERVED(x)      ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CTRL5, [0x323C00B0] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_BIST_EN          ( BIT(24) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_BIST_CTRL(x)     ( (x) << 16 & (BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_BIST_CNT(x)      ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CTRL6, [0x323C00B4] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CALI_MODE(x)     ( (x) << 17 & (BIT(17)|BIT(18)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CALI_INI(x)      ( (x) << 12 & (BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CALI_TRIG        ( BIT(11) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_FREQ_DIFF_EN     ( BIT(10) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CALI_WAITCNT(x)  ( (x) << 8  & (BIT(8)|BIT(9)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CALI_POLARITY    ( BIT(7) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CALI_DONE        ( BIT(6) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CALI_OUT(x)      ( (x) << 1  & (BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CALI_CPPD        ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CTRL7, [0x323C00B8] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL_CLK_JITTER_MON_EN ( BIT(26) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL_CLK_JITTER_MON_SEL(x) ( (x) << 22 & (BIT(22)|BIT(23)|BIT(24)|BIT(25)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_VCTRLH_SEL(x)    ( (x) << 19 & (BIT(19)|BIT(20)|BIT(21)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_VCTRLL_SEL(x)    ( (x) << 16 & (BIT(16)|BIT(17)|BIT(18)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_RG_CLOSELOOP_EN  ( BIT(15) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_VCO_BANK_SEL(x)  ( (x) << 10 & (BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CALI_VCTRL_HIGH  ( BIT(9) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_CALI_VCTRL_LOW   ( BIT(8) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_VCO_BANK_SEL_OFFSET ( BIT(7) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_ADJ_MANUAL_PD    ( BIT(6) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_ISO_SW_EN        ( BIT(5) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_TEST_CLK_EN            ( BIT(4) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_TEST_SEL               ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL_RESERVED_BIT2     ( BIT(2) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL_RESERVED_BIT1_0(x) ( (x) << 0  & (BIT(0)|BIT(1)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL2_SCU_DVFS_INDEX0, [0x323C00BC] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_N_INDEX0(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_POSTDIV_INDEX0   ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_ICP_INDEX0(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL2_SCU_DVFS_INDEX1, [0x323C00C0] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_N_INDEX1(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_POSTDIV_INDEX1   ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_ICP_INDEX1(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL2_SCU_DVFS_INDEX2, [0x323C00C4] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_N_INDEX2(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_POSTDIV_INDEX2   ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_ICP_INDEX2(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL2_SCU_DVFS_INDEX3, [0x323C00C8] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_N_INDEX3(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_POSTDIV_INDEX3   ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_ICP_INDEX3(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL2_SCU_DVFS_INDEX4, [0x323C00CC] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_N_INDEX4(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_POSTDIV_INDEX4   ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_ICP_INDEX4(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL2_SCU_DVFS_INDEX5, [0x323C00D0] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_N_INDEX5(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_POSTDIV_INDEX5   ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_ICP_INDEX5(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL2_SCU_DVFS_INDEX6, [0x323C00D4] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_N_INDEX6(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_POSTDIV_INDEX6   ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_ICP_INDEX6(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL2_SCU_DVFS_INDEX7, [0x323C00D8] */
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_N_INDEX7(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_POSTDIV_INDEX7   ( BIT(3) )
#define BIT_ANLG_PHY_G3_ANALOG_MPLL2_MPLL2_ICP_INDEX7(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G3_ANALOG_MPLL2_REG_SEL_CFG_0, [0x323C00DC] */
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_MPLL2_MPLL2_N        ( BIT(6) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_MPLL2_MPLL2_ICP      ( BIT(5) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_MPLL2_MPLL2_DIV32_EN ( BIT(4) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_MPLL2_MPLL2_POSTDIV  ( BIT(3) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_MPLL2_MPLL2_CLKOUT_EN ( BIT(2) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_MPLL2_MPLL2_RST      ( BIT(1) )
#define BIT_ANLG_PHY_G3_DBG_SEL_ANALOG_MPLL2_MPLL2_PD       ( BIT(0) )

/* vars definitions for controller CTL_ANLG_PHY_G3 */


#endif /* __ANLG_PHY_G3_H____ */
