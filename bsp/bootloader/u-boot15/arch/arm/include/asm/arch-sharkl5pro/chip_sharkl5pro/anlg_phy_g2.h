/*
 * Copyright (C) 2018 Unigroup Spreadtrum & RDA Technologies Co., Ltd.
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 ********************************************************************
 * Auto generated c code from ASIC Documentation, PLEASE DONOT EDIT *
 ********************************************************************
 */

#ifndef __ANLG_PHY_G2_H____
#define __ANLG_PHY_G2_H____

/* Some defs, in case these are not defined elsewhere */
#ifndef SCI_IOMAP
#define SCI_IOMAP(_b_) ( (_b_) )
#endif

#ifndef SCI_ADDR
#define SCI_ADDR(_b_, _o_) ( (_b_) + (_o_) )
#endif

#ifndef CTL_ANLG_PHY_G2_BASE
#define CTL_ANLG_PHY_G2_BASE            SCI_IOMAP(0x323B0000)
#endif

/* registers definitions for CTL_ANLG_PHY_G2, 0x323B0000 */
#define REG_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CTRL0            SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0000)
#define REG_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CTRL1            SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0004)
#define REG_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CTRL2            SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0008)
#define REG_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CTRL3            SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x000C)
#define REG_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CTRL4            SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0010)
#define REG_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CTRL5            SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0014)
#define REG_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CTRL6            SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0018)
#define REG_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CTRL7            SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x001C)
#define REG_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CTRL8            SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0020)
#define REG_ANLG_PHY_G2_ANALOG_MPLL1_PROMETHEUS_DVFS_INDEX0 SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0024)
#define REG_ANLG_PHY_G2_ANALOG_MPLL1_PROMETHEUS_DVFS_INDEX1 SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0028)
#define REG_ANLG_PHY_G2_ANALOG_MPLL1_PROMETHEUS_DVFS_INDEX2 SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x002C)
#define REG_ANLG_PHY_G2_ANALOG_MPLL1_PROMETHEUS_DVFS_INDEX3 SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0030)
#define REG_ANLG_PHY_G2_ANALOG_MPLL1_PROMETHEUS_DVFS_INDEX4 SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0034)
#define REG_ANLG_PHY_G2_ANALOG_MPLL1_PROMETHEUS_DVFS_INDEX5 SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0038)
#define REG_ANLG_PHY_G2_ANALOG_MPLL1_PROMETHEUS_DVFS_INDEX6 SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x003C)
#define REG_ANLG_PHY_G2_ANALOG_MPLL1_PROMETHEUS_DVFS_INDEX7 SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0040)
#define REG_ANLG_PHY_G2_ANALOG_MPLL1_REG_SEL_CFG_0          SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0044)
#define REG_ANLG_PHY_G2_ANALOG_THM2_THM2_CTL                SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0048)
#define REG_ANLG_PHY_G2_ANALOG_THM2_THM2_RESERVED_CTL       SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x004C)
#define REG_ANLG_PHY_G2_ANALOG_THM2_REG_SEL_CFG_0           SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0050)
#define REG_ANLG_PHY_G2_ANALOG_USB20_USB20_TEST_PIN         SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0054)
#define REG_ANLG_PHY_G2_ANALOG_USB20_USB20_UTMI_CTL1        SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0058)
#define REG_ANLG_PHY_G2_ANALOG_USB20_USB20_BATTER_PLL       SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x005C)
#define REG_ANLG_PHY_G2_ANALOG_USB20_USB20_UTMI_CTL2        SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0060)
#define REG_ANLG_PHY_G2_ANALOG_USB20_USB20_TRIMMING         SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0064)
#define REG_ANLG_PHY_G2_ANALOG_USB20_USB20_PHY_TUNE_CTL     SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0068)
#define REG_ANLG_PHY_G2_ANALOG_USB20_USB20_PHY_BIST_TEST    SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x006C)
#define REG_ANLG_PHY_G2_ANALOG_USB20_USB20_ISO_SW           SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0070)
#define REG_ANLG_PHY_G2_ANALOG_USB20_REG_SEL_CFG_0          SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0074)
#define REG_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_CTRL0       SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0078)
#define REG_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_CTRL1       SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x007C)
#define REG_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_CTRL2       SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0080)
#define REG_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_CTRL3       SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0084)
#define REG_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_CTRL4       SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x0088)
#define REG_ANLG_PHY_G2_ANALOG_EPLL_TOP_REG_SEL_CFG_0       SCI_ADDR(CTL_ANLG_PHY_G2_BASE, 0x008C)

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CTRL0, [0x323B0000] */
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_LOCK_DONE        ( BIT(17) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CLKIN_SEL        ( BIT(16) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_N(x)             ( (x) << 5  & (BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_ICP(x)           ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_SDM_EN           ( BIT(1) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_DIV_S            ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CTRL1, [0x323B0004] */
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_NINT(x)          ( (x) << 23 & (BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_KINT(x)          ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CTRL2, [0x323B0008] */
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_DIV32_EN         ( BIT(14) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_POSTDIV          ( BIT(13) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_FREQ_DOUBLE_EN   ( BIT(12) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CCS_CTRL(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_MOD_EN           ( BIT(3) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CLKOUT_EN        ( BIT(2) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_RST              ( BIT(1) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_PD               ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CTRL3, [0x323B000C] */
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_R2_SEL(x)        ( (x) << 22 & (BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_R3_SEL(x)        ( (x) << 20 & (BIT(20)|BIT(21)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_C1_SEL(x)        ( (x) << 18 & (BIT(18)|BIT(19)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_C2_SEL(x)        ( (x) << 16 & (BIT(16)|BIT(17)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_KVCO_SEL(x)      ( (x) << 14 & (BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_VCO_TEST_INTSEL(x) ( (x) << 11 & (BIT(11)|BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_VCO_TEST_INT     ( BIT(10) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CP_EN            ( BIT(9) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_LDO_TRIM(x)      ( (x) << 5  & (BIT(5)|BIT(6)|BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_VCO_TEST_EN      ( BIT(4) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_FBDIV_EN         ( BIT(3) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CP_OFFSET(x)     ( (x) << 1  & (BIT(1)|BIT(2)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_VCOBUF_EN        ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CTRL4, [0x323B0010] */
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_RESERVED(x)      ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CTRL5, [0x323B0014] */
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_BIST_CTRL(x)     ( (x) << 17 & (BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_BIST_EN          ( BIT(16) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_BIST_CNT(x)      ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CTRL6, [0x323B0018] */
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_26MBUFFER_PD     ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CTRL7, [0x323B001C] */
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CALI_MODE(x)     ( (x) << 17 & (BIT(17)|BIT(18)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CALI_INI(x)      ( (x) << 12 & (BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CALI_TRIG        ( BIT(11) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_FREQ_DIFF_EN     ( BIT(10) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CALI_WAITCNT(x)  ( (x) << 8  & (BIT(8)|BIT(9)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CALI_POLARITY    ( BIT(7) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CALI_DONE        ( BIT(6) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CALI_OUT(x)      ( (x) << 1  & (BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CALI_CPPD        ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CTRL8, [0x323B0020] */
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_VCTRLH_SEL(x)    ( (x) << 17 & (BIT(17)|BIT(18)|BIT(19)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_VCTRLL_SEL(x)    ( (x) << 14 & (BIT(14)|BIT(15)|BIT(16)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_RG_CLOSELOOP_EN  ( BIT(13) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_VCO_BANK_SEL(x)  ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CALI_VCTRL_HIGH  ( BIT(7) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_CALI_VCTRL_LOW   ( BIT(6) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_VCO_BANK_SEL_OFFSET ( BIT(5) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_ADJ_MANUAL_PD    ( BIT(4) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_ISO_SW_EN        ( BIT(3) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_TEST_CLK_EN            ( BIT(2) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_TEST_SEL               ( BIT(1) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_26MBUFFER_CLKOUT_EN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_MPLL1_PROMETHEUS_DVFS_INDEX0, [0x323B0024] */
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_N_INDEX0(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_POSTDIV_INDEX0   ( BIT(3) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_ICP_INDEX0(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_MPLL1_PROMETHEUS_DVFS_INDEX1, [0x323B0028] */
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_N_INDEX1(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_POSTDIV_INDEX1   ( BIT(3) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_ICP_INDEX1(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_MPLL1_PROMETHEUS_DVFS_INDEX2, [0x323B002C] */
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_N_INDEX2(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_POSTDIV_INDEX2   ( BIT(3) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_ICP_INDEX2(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_MPLL1_PROMETHEUS_DVFS_INDEX3, [0x323B0030] */
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_N_INDEX3(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_POSTDIV_INDEX3   ( BIT(3) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_ICP_INDEX3(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_MPLL1_PROMETHEUS_DVFS_INDEX4, [0x323B0034] */
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_N_INDEX4(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_POSTDIV_INDEX4   ( BIT(3) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_ICP_INDEX4(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_MPLL1_PROMETHEUS_DVFS_INDEX5, [0x323B0038] */
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_N_INDEX5(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_POSTDIV_INDEX5   ( BIT(3) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_ICP_INDEX5(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_MPLL1_PROMETHEUS_DVFS_INDEX6, [0x323B003C] */
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_N_INDEX6(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_POSTDIV_INDEX6   ( BIT(3) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_ICP_INDEX6(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_MPLL1_PROMETHEUS_DVFS_INDEX7, [0x323B0040] */
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_N_INDEX7(x)      ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_POSTDIV_INDEX7   ( BIT(3) )
#define BIT_ANLG_PHY_G2_ANALOG_MPLL1_MPLL1_ICP_INDEX7(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_MPLL1_REG_SEL_CFG_0, [0x323B0044] */
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_MPLL1_MPLL1_N        ( BIT(7) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_MPLL1_MPLL1_ICP      ( BIT(6) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_MPLL1_MPLL1_DIV32_EN ( BIT(5) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_MPLL1_MPLL1_POSTDIV  ( BIT(4) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_MPLL1_MPLL1_CLKOUT_EN ( BIT(3) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_MPLL1_MPLL1_RST      ( BIT(2) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_MPLL1_MPLL1_PD       ( BIT(1) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_MPLL1_MPLL1_26MBUFFER_PD ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_THM2_THM2_CTL, [0x323B0048] */
#define BIT_ANLG_PHY_G2_ANALOG_THM2_THM_RSTN                ( BIT(27) )
#define BIT_ANLG_PHY_G2_ANALOG_THM2_THM_RUN                 ( BIT(26) )
#define BIT_ANLG_PHY_G2_ANALOG_THM2_THM_PD                  ( BIT(25) )
#define BIT_ANLG_PHY_G2_ANALOG_THM2_THM_VALID               ( BIT(24) )
#define BIT_ANLG_PHY_G2_ANALOG_THM2_THM_BG_RBIAS_MODE       ( BIT(23) )
#define BIT_ANLG_PHY_G2_ANALOG_THM2_THM_TEST_SEL(x)         ( (x) << 21 & (BIT(21)|BIT(22)) )
#define BIT_ANLG_PHY_G2_ANALOG_THM2_THM_BP_MODE             ( BIT(20) )
#define BIT_ANLG_PHY_G2_ANALOG_THM2_THM_DATA(x)             ( (x) << 10 & (BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)) )
#define BIT_ANLG_PHY_G2_ANALOG_THM2_THM_BP_DATA(x)          ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_THM2_THM2_RESERVED_CTL, [0x323B004C] */
#define BIT_ANLG_PHY_G2_ANALOG_THM2_THM_RESERVED(x)         ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_THM2_REG_SEL_CFG_0, [0x323B0050] */
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_THM2_THM_RSTN        ( BIT(3) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_THM2_THM_RUN         ( BIT(2) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_THM2_THM_PD          ( BIT(1) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_THM2_THM_RESERVED    ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_USB20_USB20_TEST_PIN, [0x323B0054] */
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_TESTCLK          ( BIT(24) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_TESTDATAIN(x)    ( (x) << 16 & (BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_TESTADDR(x)      ( (x) << 12 & (BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_TESTDATAOUTSEL   ( BIT(11) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_TESTDATAOUT(x)   ( (x) << 7  & (BIT(7)|BIT(8)|BIT(9)|BIT(10)) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_BIST_MODE(x)     ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_T2RCOMP          ( BIT(1) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_LPBK_END         ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_USB20_USB20_UTMI_CTL1, [0x323B0058] */
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_DATABUS16_8      ( BIT(28) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_SUSPENDM         ( BIT(27) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_PORN             ( BIT(26) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_RESET            ( BIT(25) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_RXERROR          ( BIT(24) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_BYPASS_DRV_DP    ( BIT(23) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_BYPASS_DRV_DM    ( BIT(22) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_BYPASS_FS        ( BIT(21) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_BYPASS_IN_DP     ( BIT(20) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_BYPASS_IN_DM     ( BIT(19) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_BYPASS_OUT_DP    ( BIT(18) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_BYPASS_OUT_DM    ( BIT(17) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_VBUSVLDEXT       ( BIT(16) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_RESERVED(x)      ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_USB20_USB20_BATTER_PLL, [0x323B005C] */
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_PS_PD_S          ( BIT(4) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_PS_PD_L          ( BIT(3) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_REXTENABLE       ( BIT(2) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_DMPULLUP         ( BIT(1) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_SAMPLER_SEL      ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_USB20_USB20_UTMI_CTL2, [0x323B0060] */
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_DPPULLDOWN       ( BIT(4) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_DMPULLDOWN       ( BIT(3) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_TXBITSTUFFENABLE ( BIT(2) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_TXBITSTUFFENABLEH ( BIT(1) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_SLEEPM           ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_USB20_USB20_TRIMMING, [0x323B0064] */
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_TUNEHSAMP(x)     ( (x) << 25 & (BIT(25)|BIT(26)) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_TFREGRES(x)      ( (x) << 19 & (BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_TFHSRES(x)       ( (x) << 14 & (BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_TUNERISE(x)      ( (x) << 12 & (BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_TUNEOTG(x)       ( (x) << 9  & (BIT(9)|BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_TUNEDSC(x)       ( (x) << 7  & (BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_TUNESQ(x)        ( (x) << 3  & (BIT(3)|BIT(4)|BIT(5)|BIT(6)) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_TUNEEQ(x)        ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_USB20_USB20_PHY_TUNE_CTL, [0x323B0068] */
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_TUNEPLLS(x)      ( (x) << 10 & (BIT(10)|BIT(11)|BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_PLL_PFD_DEADZONE(x) ( (x) << 8  & (BIT(8)|BIT(9)) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_PLL_PFD_DELAY(x) ( (x) << 6  & (BIT(6)|BIT(7)) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_PLL_CP_IOFFSET_EN ( BIT(5) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_PLL_CP_IOFFSET(x) ( (x) << 1  & (BIT(1)|BIT(2)|BIT(3)|BIT(4)) )
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_PLL_REF_DOUBLER_EN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_USB20_USB20_PHY_BIST_TEST, [0x323B006C] */
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_BIST_MODE_EN     ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_USB20_USB20_ISO_SW, [0x323B0070] */
#define BIT_ANLG_PHY_G2_ANALOG_USB20_USB20_ISO_SW_EN        ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_USB20_REG_SEL_CFG_0, [0x323B0074] */
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_USB20_USB20_SUSPENDM ( BIT(8) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_USB20_USB20_PORN     ( BIT(7) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_USB20_USB20_RESET    ( BIT(6) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_USB20_USB20_BYPASS_FS ( BIT(5) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_USB20_USB20_BYPASS_IN_DM ( BIT(4) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_USB20_USB20_SAMPLER_SEL ( BIT(3) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_USB20_USB20_DPPULLDOWN ( BIT(2) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_USB20_USB20_DMPULLDOWN ( BIT(1) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_USB20_USB20_SLEEPM   ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_CTRL0, [0x323B0078] */
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_TORG_EPLL_LOCK_DONE ( BIT(9) )
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_N(x)        ( (x) << 3  & (BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)) )
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_ICP(x)      ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_CTRL1, [0x323B007C] */
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_LPF(x)      ( (x) << 11 & (BIT(11)|BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_RBIAS_MODE  ( BIT(10) )
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_FBDIV_EN    ( BIT(9) )
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_IGN26MSPUR_EN ( BIT(8) )
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_TEST_SEL(x) ( (x) << 6  & (BIT(6)|BIT(7)) )
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_DIV32_CLKOUT_EN ( BIT(5) )
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_POSTDIV     ( BIT(4) )
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_BG_PD       ( BIT(3) )
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_CLKOUT_EN   ( BIT(2) )
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_RST         ( BIT(1) )
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_PD          ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_CTRL2, [0x323B0080] */
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_CP_EN       ( BIT(7) )
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_LDO_TRIM(x) ( (x) << 3  & (BIT(3)|BIT(4)|BIT(5)|BIT(6)) )
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_CP_OFFSET(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_CTRL3, [0x323B0084] */
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_RESERVED(x) ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_CTRL4, [0x323B0088] */
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_BIST_EN     ( BIT(24) )
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_RG_EPLL_BIST_CTRL(x) ( (x) << 16 & (BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G2_ANALOG_EPLL_TOP_TORG_EPLL_BIST_CNT(x) ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_G2_ANALOG_EPLL_TOP_REG_SEL_CFG_0, [0x323B008C] */
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_EPLL_TOP_RG_EPLL_DIV32_CLKOUT_EN ( BIT(4) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_EPLL_TOP_RG_EPLL_BG_PD ( BIT(3) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_EPLL_TOP_RG_EPLL_CLKOUT_EN ( BIT(2) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_EPLL_TOP_RG_EPLL_RST ( BIT(1) )
#define BIT_ANLG_PHY_G2_DBG_SEL_ANALOG_EPLL_TOP_RG_EPLL_PD  ( BIT(0) )

/* vars definitions for controller CTL_ANLG_PHY_G2 */


#endif /* __ANLG_PHY_G2_H____ */
