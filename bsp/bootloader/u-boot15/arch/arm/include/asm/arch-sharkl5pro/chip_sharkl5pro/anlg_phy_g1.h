/*
 * Copyright (C) 2018 Unigroup Spreadtrum & RDA Technologies Co., Ltd.
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 ********************************************************************
 * Auto generated c code from ASIC Documentation, PLEASE DONOT EDIT *
 ********************************************************************
 */

#ifndef __ANLG_PHY_G1_H____
#define __ANLG_PHY_G1_H____

/* Some defs, in case these are not defined elsewhere */
#ifndef SCI_IOMAP
#define SCI_IOMAP(_b_) ( (_b_) )
#endif

#ifndef SCI_ADDR
#define SCI_ADDR(_b_, _o_) ( (_b_) + (_o_) )
#endif

#ifndef CTL_ANLG_PHY_G1_BASE
#define CTL_ANLG_PHY_G1_BASE            SCI_IOMAP(0x323A0000)
#endif

/* registers definitions for CTL_ANLG_PHY_G1, 0x323A0000 */
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXCLKLANE SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0000)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_0 SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0004)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_1 SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0008)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_2 SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x000C)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_3 SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0010)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATAESC SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0014)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_STATE_RX SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0018)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_ERR    SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x001C)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_CTRL   SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0020)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_RSVD   SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0024)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TEST   SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0028)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_DATALANE_CTRL SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x002C)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_MIPI_CTRL7    SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0030)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ISO_SW    SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0034)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_REG_SEL_CFG_0 SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x0038)
#define REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_REG_SEL_CFG_1 SCI_ADDR(CTL_ANLG_PHY_G1_BASE, 0x003C)

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXCLKLANE, [0x323A0000] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTHSCLK ( BIT(4) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSCLK ( BIT(3) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXITCLK ( BIT(2) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATECLK ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ULPSACTIVENOTCLK ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_0, [0x323A0004] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_0 ( BIT(10) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_0 ( BIT(9) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_0 ( BIT(8) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_0 ( BIT(7) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_0 ( BIT(6) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_0(x) ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_0 ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREADYESC_0 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_1, [0x323A0008] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_1 ( BIT(10) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_1 ( BIT(9) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_1 ( BIT(8) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_1 ( BIT(7) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_1 ( BIT(6) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_1(x) ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_1 ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREADYESC_1 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_2, [0x323A000C] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_2 ( BIT(10) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_2 ( BIT(9) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_2 ( BIT(8) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_2 ( BIT(7) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_2 ( BIT(6) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_2(x) ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_2 ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREADYESC_2 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATA_3, [0x323A0010] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_3 ( BIT(10) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_3 ( BIT(9) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_3 ( BIT(8) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_3 ( BIT(7) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_3 ( BIT(6) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_3(x) ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)|BIT(5)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_3 ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXREADYESC_3 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TXDATAESC, [0x323A0014] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_0(x) ( (x) << 24 & (BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_1(x) ( (x) << 16 & (BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_2(x) ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_3(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_STATE_RX, [0x323A0018] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXLPDTESC_0 ( BIT(23) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXTRIGGERESC_0(x) ( (x) << 19 & (BIT(19)|BIT(20)|BIT(21)|BIT(22)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXVALIDESC_0 ( BIT(18) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXLPDTESC_1 ( BIT(17) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXTRIGGERESC_1(x) ( (x) << 13 & (BIT(13)|BIT(14)|BIT(15)|BIT(16)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXVALIDESC_1 ( BIT(12) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXLPDTESC_2 ( BIT(11) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXTRIGGERESC_2(x) ( (x) << 7  & (BIT(7)|BIT(8)|BIT(9)|BIT(10)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXVALIDESC_2 ( BIT(6) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXLPDTESC_3 ( BIT(5) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXTRIGGERESC_3(x) ( (x) << 1  & (BIT(1)|BIT(2)|BIT(3)|BIT(4)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RXVALIDESC_3 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_ERR, [0x323A001C] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRESC_0  ( BIT(19) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRSYNCESC_0 ( BIT(18) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTROL_0 ( BIT(17) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP0_0 ( BIT(16) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP1_0 ( BIT(15) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRESC_1  ( BIT(14) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRSYNCESC_1 ( BIT(13) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTROL_1 ( BIT(12) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP0_1 ( BIT(11) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP1_1 ( BIT(10) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRESC_2  ( BIT(9) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRSYNCESC_2 ( BIT(8) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTROL_2 ( BIT(7) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP0_2 ( BIT(6) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP1_2 ( BIT(5) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRESC_3  ( BIT(4) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRSYNCESC_3 ( BIT(3) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTROL_3 ( BIT(2) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP0_3 ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ERRCONTENTIONLP1_3 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_CTRL, [0x323A0020] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_PS_PD_S   ( BIT(21) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_PS_PD_L   ( BIT(20) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_SHUTDOWNZ ( BIT(19) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RSTZ      ( BIT(18) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_0  ( BIT(17) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_1  ( BIT(16) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_2  ( BIT(15) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_3  ( BIT(14) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ENABLECLK ( BIT(13) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_FORCEPLL  ( BIT(12) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_PLLLOCK   ( BIT(11) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_BISTON    ( BIT(10) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_BISTDONE  ( BIT(9) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_IF_SEL    ( BIT(8) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TRIMBG(x) ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TX_RCTL(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_RSVD, [0x323A0024] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RESERVED(x) ( (x) << 8  & (BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_RESERVEDO(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_TEST, [0x323A0028] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TESTDIN(x) ( (x) << 11 & (BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TESTDOUT(x) ( (x) << 3  & (BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TESTEN    ( BIT(2) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TESTCLK   ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TESTCLR   ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_4L_DATALANE_CTRL, [0x323A002C] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_0 ( BIT(22) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_DIRECTION_0 ( BIT(21) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TURNDISABLE_0 ( BIT(20) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_FORCERXMODE_0 ( BIT(19) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_FORCETXSTOPMODE_0 ( BIT(18) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATEDATA_0 ( BIT(17) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_1 ( BIT(16) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TURNDISABLE_1 ( BIT(15) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_FORCERXMODE_1 ( BIT(14) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_FORCETXSTOPMODE_1 ( BIT(13) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATEDATA_1 ( BIT(12) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_2 ( BIT(11) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_DIRECTION_2 ( BIT(10) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TURNDISABLE_2 ( BIT(9) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_FORCERXMODE_2 ( BIT(8) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_FORCETXSTOPMODE_2 ( BIT(7) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATEDATA_2 ( BIT(6) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_3 ( BIT(5) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_DIRECTION_3 ( BIT(4) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TURNDISABLE_3 ( BIT(3) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_FORCERXMODE_3 ( BIT(2) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_FORCETXSTOPMODE_3 ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_STOPSTATEDATA_3 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_MIPI_CTRL7, [0x323A0030] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXSKEWCALHS_0 ( BIT(3) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXSKEWCALHS_1 ( BIT(2) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXSKEWCALHS_2 ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_TXSKEWCALHS_3 ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ISO_SW, [0x323A0034] */
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_DIV6CLK_GATEEN ( BIT(2) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_PHY_MODE  ( BIT(1) )
#define BIT_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_DSI_ISO_SW_EN ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_REG_SEL_CFG_0, [0x323A0038] */
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTHSCLK ( BIT(31) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSCLK ( BIT(30) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXITCLK ( BIT(29) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_0 ( BIT(28) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_0 ( BIT(27) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXLPDTESC_0 ( BIT(26) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_0 ( BIT(25) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_0 ( BIT(24) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXTRIGGERESC_0 ( BIT(23) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXVALIDESC_0 ( BIT(22) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_1 ( BIT(21) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_1 ( BIT(20) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_1 ( BIT(19) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_1 ( BIT(18) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_2 ( BIT(17) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_2 ( BIT(16) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_2 ( BIT(15) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_2 ( BIT(14) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTDATAHS_3 ( BIT(13) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXREQUESTESC_3 ( BIT(12) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSESC_3 ( BIT(11) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXULPSEXIT_3 ( BIT(10) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXDATAESC_0 ( BIT(9) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_PS_PD_S ( BIT(8) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_PS_PD_L ( BIT(7) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_SHUTDOWNZ ( BIT(6) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_RSTZ ( BIT(5) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_0 ( BIT(4) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_1 ( BIT(3) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_2 ( BIT(2) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLE_3 ( BIT(1) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ENABLECLK ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_G1_ANALOG_MIPI_DSI_4LANE_REG_SEL_CFG_1, [0x323A003C] */
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_PHY_MODE ( BIT(11) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_FORCEPLL ( BIT(10) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TESTDIN ( BIT(9) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TESTEN ( BIT(8) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TESTCLK ( BIT(7) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TESTCLR ( BIT(6) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TURNREQUEST_0 ( BIT(5) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXSKEWCALHS_0 ( BIT(4) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXSKEWCALHS_1 ( BIT(3) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXSKEWCALHS_2 ( BIT(2) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_TXSKEWCALHS_3 ( BIT(1) )
#define BIT_ANLG_PHY_G1_DBG_SEL_ANALOG_MIPI_DSI_4LANE_DSI_ISO_SW_EN ( BIT(0) )

/* vars definitions for controller CTL_ANLG_PHY_G1 */


#endif /* __ANLG_PHY_G1_H____ */
