/*
 * Copyright (C) 2018 Unigroup Spreadtrum & RDA Technologies Co., Ltd.
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 ********************************************************************
 * Auto generated c code from ASIC Documentation, PLEASE DONOT EDIT *
 ********************************************************************
 */

#ifndef __ANLG_PHY_GC_H____
#define __ANLG_PHY_GC_H____

/* Some defs, in case these are not defined elsewhere */
#ifndef SCI_IOMAP
#define SCI_IOMAP(_b_) ( (_b_) )
#endif

#ifndef SCI_ADDR
#define SCI_ADDR(_b_, _o_) ( (_b_) + (_o_) )
#endif

#ifndef CTL_ANLG_PHY_GC_BASE
#define CTL_ANLG_PHY_GC_BASE            SCI_IOMAP(0x323E0000)
#endif

/* registers definitions for CTL_ANLG_PHY_GC, 0x323E0000 */
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_CTRL0          SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0000)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_CTRL1          SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0004)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_CTRL2          SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0008)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_PERFOR         SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x000C)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_CTRL3          SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0010)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_BIST_CTRL      SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0014)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_CTRL0           SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0018)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_CTRL1           SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x001C)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_CTRL2           SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0020)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_PERFOR          SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0024)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_CTRL3           SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0028)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_BIST_CTRL       SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x002C)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_CTRL0         SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0030)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_CTRL1         SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0034)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_CTRL2         SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0038)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_PERFOR        SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x003C)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_CTRL3         SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0040)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_CTRL4         SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0044)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_CTRL0           SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0048)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_CTRL1           SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x004C)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_CTRL2           SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0050)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_PERFOR          SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0054)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_CTRL3           SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0058)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_BIST_CTRL       SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x005C)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_CTRL0           SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0060)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_CTRL1           SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0064)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_CTRL2           SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0068)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_PERFOR          SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x006C)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_CTRL3           SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0070)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_BIST_CTRL       SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0074)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_TEST_CLK_CTRL        SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0078)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_CTRL4           SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x007C)
#define REG_ANLG_PHY_GC_ANALOG_PLL_TOP_REG_SEL_CFG_0        SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0080)
#define REG_ANLG_PHY_GC_ANALOG_THM1_0_THM1_CTL              SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0084)
#define REG_ANLG_PHY_GC_ANALOG_THM1_0_THM1_RESERVED_CTL     SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x0088)
#define REG_ANLG_PHY_GC_ANALOG_THM1_0_REG_SEL_CFG_0         SCI_ADDR(CTL_ANLG_PHY_GC_BASE, 0x008C)

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_CTRL0, [0x323E0000] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_LOCK_DONE      ( BIT(18) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_REF_SEL(x)     ( (x) << 16 & (BIT(16)|BIT(17)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_N(x)           ( (x) << 5  & (BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_ICP(x)         ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_SDM_EN         ( BIT(1) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_DIV_S          ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_CTRL1, [0x323E0004] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_NINT(x)        ( (x) << 23 & (BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_KINT(x)        ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_CTRL2, [0x323E0008] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_OD_TWPLL_CLKOUT_EN   ( BIT(19) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_DIV7_EN        ( BIT(18) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_DIV5_EN        ( BIT(17) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_DIV3_EN        ( BIT(16) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_DIV2_EN        ( BIT(15) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_DIV1_EN        ( BIT(14) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_POSTDIV        ( BIT(13) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_FREQ_DOUBLE_EN ( BIT(12) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_SSC_CTRL(x)    ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_MOD_EN         ( BIT(3) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_CLKOUT_EN      ( BIT(2) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_RST            ( BIT(1) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_PD             ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_PERFOR, [0x323E000C] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_CP_EN          ( BIT(8) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_LDO_TRIM(x)    ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_VCO_TEST_EN    ( BIT(3) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_FBDIV_EN       ( BIT(2) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_CP_OFFSET(x)   ( (x) << 0  & (BIT(0)|BIT(1)) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_CTRL3, [0x323E0010] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_IBIAS(x)       ( (x) << 14 & (BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_LPF(x)         ( (x) << 11 & (BIT(11)|BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_RESERVED(x)    ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_BIST_CTRL, [0x323E0014] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_BIST_CTRL(x)   ( (x) << 17 & (BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_BIST_EN        ( BIT(16) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TWPLL_BIST_CNT(x)    ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_CTRL0, [0x323E0018] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_LOCK_DONE       ( BIT(18) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_REF_SEL(x)      ( (x) << 16 & (BIT(16)|BIT(17)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_N(x)            ( (x) << 5  & (BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_ICP(x)          ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_SDM_EN          ( BIT(1) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_DIV_S           ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_CTRL1, [0x323E001C] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_NINT(x)         ( (x) << 23 & (BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_KINT(x)         ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_CTRL2, [0x323E0020] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_OD_LPLL_CLKOUT_EN    ( BIT(18) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_DIV5_EN         ( BIT(17) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_DIV3_EN         ( BIT(16) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_DIV2_EN         ( BIT(15) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_DIV1_EN         ( BIT(14) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_POSTDIV         ( BIT(13) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_FREQ_DOUBLE_EN  ( BIT(12) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_SSC_CTRL(x)     ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_MOD_EN          ( BIT(3) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_CLKOUT_EN       ( BIT(2) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_RST             ( BIT(1) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_PD              ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_PERFOR, [0x323E0024] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_CP_EN           ( BIT(8) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_LDO_TRIM(x)     ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_VCO_TEST_EN     ( BIT(3) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_FBDIV_EN        ( BIT(2) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_CP_OFFSET(x)    ( (x) << 0  & (BIT(0)|BIT(1)) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_CTRL3, [0x323E0028] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_IBIAS(x)        ( (x) << 14 & (BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_LPF(x)          ( (x) << 11 & (BIT(11)|BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_RESERVED(x)     ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_BIST_CTRL, [0x323E002C] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_BIST_CTRL(x)    ( (x) << 17 & (BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_BIST_EN         ( BIT(16) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_LPLL_BIST_CNT(x)     ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_CTRL0, [0x323E0030] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_LOCK_DONE     ( BIT(17) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_REF_SEL       ( BIT(16) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_N(x)          ( (x) << 5  & (BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_ICP(x)        ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_SDM_EN        ( BIT(1) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_DIV_S         ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_CTRL1, [0x323E0034] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_NINT(x)       ( (x) << 23 & (BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_KINT(x)       ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_CTRL2, [0x323E0038] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_OD_ISPPLL_CLKOUT_EN  ( BIT(17) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_DIV3_EN       ( BIT(16) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_DIV2_EN       ( BIT(15) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_DIV1_EN       ( BIT(14) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_POSTDIV       ( BIT(13) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_FREQ_DOUBLE_EN ( BIT(12) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_SSC_CTRL(x)   ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_MOD_EN        ( BIT(3) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_CLKOUT_EN     ( BIT(2) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_RST           ( BIT(1) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_PD            ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_PERFOR, [0x323E003C] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_CP_EN         ( BIT(8) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_LDO_TRIM(x)   ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_VCO_TEST_EN   ( BIT(3) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_FBDIV_EN      ( BIT(2) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_CP_OFFSET(x)  ( (x) << 0  & (BIT(0)|BIT(1)) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_CTRL3, [0x323E0040] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_IBIAS(x)      ( (x) << 14 & (BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_LPF(x)        ( (x) << 11 & (BIT(11)|BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_RESERVED(x)   ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_CTRL4, [0x323E0044] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_BIST_CTRL(x)  ( (x) << 17 & (BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_BIST_EN       ( BIT(16) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ISPPLL_BIST_CNT(x)   ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_CTRL0, [0x323E0048] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_LOCK_DONE       ( BIT(17) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_REF_SEL         ( BIT(16) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_N(x)            ( (x) << 5  & (BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_ICP(x)          ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_SDM_EN          ( BIT(1) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_DIV_S           ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_CTRL1, [0x323E004C] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_NINT(x)         ( (x) << 23 & (BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_KINT(x)         ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_CTRL2, [0x323E0050] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_OD_GPLL_CLKOUT_EN    ( BIT(14) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_POSTDIV         ( BIT(13) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_FREQ_DOUBLE_EN  ( BIT(12) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_SSC_CTRL(x)     ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_MOD_EN          ( BIT(3) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_CLKOUT_EN       ( BIT(2) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_RST             ( BIT(1) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_PD              ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_PERFOR, [0x323E0054] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_CP_EN           ( BIT(8) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_LDO_TRIM(x)     ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_VCO_TEST_EN     ( BIT(3) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_FBDIV_EN        ( BIT(2) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_CP_OFFSET(x)    ( (x) << 0  & (BIT(0)|BIT(1)) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_CTRL3, [0x323E0058] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_IBIAS(x)        ( (x) << 14 & (BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_LPF(x)          ( (x) << 11 & (BIT(11)|BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_RESERVED(x)     ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_BIST_CTRL, [0x323E005C] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_BIST_CTRL(x)    ( (x) << 17 & (BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_BIST_EN         ( BIT(16) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_BIST_CNT(x)     ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_CTRL0, [0x323E0060] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_LOCK_DONE       ( BIT(18) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_REF_SEL(x)      ( (x) << 16 & (BIT(16)|BIT(17)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_N(x)            ( (x) << 5  & (BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_ICP(x)          ( (x) << 2  & (BIT(2)|BIT(3)|BIT(4)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_SDM_EN          ( BIT(1) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_DIV_S           ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_CTRL1, [0x323E0064] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_NINT(x)         ( (x) << 23 & (BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_KINT(x)         ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_CTRL2, [0x323E0068] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_OD_CPLL_CLKOUT_EN    ( BIT(17) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_DIV1_EN         ( BIT(16) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_DIV2_EN         ( BIT(15) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_DIV13_EN        ( BIT(14) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_POSTDIV         ( BIT(13) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_FREQ_DOUBLE_EN  ( BIT(12) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_SSC_CTRL(x)     ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_MOD_EN          ( BIT(3) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_CLKOUT_EN       ( BIT(2) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_RST             ( BIT(1) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_PD              ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_PERFOR, [0x323E006C] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_CP_EN           ( BIT(8) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_LDO_TRIM(x)     ( (x) << 4  & (BIT(4)|BIT(5)|BIT(6)|BIT(7)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_VCO_TEST_EN     ( BIT(3) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_FBDIV_EN        ( BIT(2) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_CP_OFFSET(x)    ( (x) << 0  & (BIT(0)|BIT(1)) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_CTRL3, [0x323E0070] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_IBIAS(x)        ( (x) << 14 & (BIT(14)|BIT(15)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_LPF(x)          ( (x) << 11 & (BIT(11)|BIT(12)|BIT(13)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_RESERVED(x)     ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_BIST_CTRL, [0x323E0074] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_BIST_CTRL(x)    ( (x) << 17 & (BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_BIST_EN         ( BIT(16) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_CPLL_BIST_CNT(x)     ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_TEST_CLK_CTRL, [0x323E0078] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TEST_CLK_EN          ( BIT(18) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_TEST_CLK_DIV(x)      ( (x) << 16 & (BIT(16)|BIT(17)) )
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ANALOG_TESTMUX(x)    ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_GPLL_CTRL4, [0x323E007C] */
#define BIT_ANLG_PHY_GC_ANALOG_PLL_TOP_ANALOG_PLL_RESERVED(x) ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_PLL_TOP_REG_SEL_CFG_0, [0x323E0080] */
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_ISPPLL_DIV1_EN ( BIT(25) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_TWPLL_REF_SEL ( BIT(24) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_TWPLL_DIV5_EN ( BIT(23) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_TWPLL_DIV3_EN ( BIT(22) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_TWPLL_DIV2_EN ( BIT(21) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_TWPLL_DIV1_EN ( BIT(20) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_TWPLL_RST    ( BIT(19) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_TWPLL_PD     ( BIT(18) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_LPLL_REF_SEL ( BIT(17) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_LPLL_DIV5_EN ( BIT(16) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_LPLL_DIV3_EN ( BIT(15) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_LPLL_DIV2_EN ( BIT(14) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_LPLL_DIV1_EN ( BIT(13) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_LPLL_RST     ( BIT(12) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_LPLL_PD      ( BIT(11) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_ISPPLL_DIV2_EN ( BIT(10) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_ISPPLL_RST   ( BIT(9) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_ISPPLL_PD    ( BIT(8) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_GPLL_CLKOUT_EN ( BIT(7) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_GPLL_RST     ( BIT(6) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_GPLL_PD      ( BIT(5) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_CPLL_DIV2_EN ( BIT(4) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_CPLL_DIV13_EN ( BIT(3) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_CPLL_CLKOUT_EN ( BIT(2) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_CPLL_RST     ( BIT(1) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_PLL_TOP_CPLL_PD      ( BIT(0) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_THM1_0_THM1_CTL, [0x323E0084] */
#define BIT_ANLG_PHY_GC_ANALOG_THM1_0_THM_RSTN              ( BIT(27) )
#define BIT_ANLG_PHY_GC_ANALOG_THM1_0_THM_RUN               ( BIT(26) )
#define BIT_ANLG_PHY_GC_ANALOG_THM1_0_THM_PD                ( BIT(25) )
#define BIT_ANLG_PHY_GC_ANALOG_THM1_0_THM_VALID             ( BIT(24) )
#define BIT_ANLG_PHY_GC_ANALOG_THM1_0_THM_BG_RBIAS_MODE     ( BIT(23) )
#define BIT_ANLG_PHY_GC_ANALOG_THM1_0_THM_TEST_SEL(x)       ( (x) << 21 & (BIT(21)|BIT(22)) )
#define BIT_ANLG_PHY_GC_ANALOG_THM1_0_THM_BP_MODE           ( BIT(20) )
#define BIT_ANLG_PHY_GC_ANALOG_THM1_0_THM_DATA(x)           ( (x) << 10 & (BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)|BIT(18)|BIT(19)) )
#define BIT_ANLG_PHY_GC_ANALOG_THM1_0_THM_BP_DATA(x)        ( (x) << 0  & (BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_THM1_0_THM1_RESERVED_CTL, [0x323E0088] */
#define BIT_ANLG_PHY_GC_ANALOG_THM1_0_THM_RESERVED(x)       ( (x) << 0  & (0x0000FFFF) )

/* bits definitions for REG_ANLG_PHY_GC_ANALOG_THM1_0_REG_SEL_CFG_0, [0x323E008C] */
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_THM1_0_THM_RSTN      ( BIT(3) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_THM1_0_THM_RUN       ( BIT(2) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_THM1_0_THM_PD        ( BIT(1) )
#define BIT_ANLG_PHY_GC_DBG_SEL_ANALOG_THM1_0_THM_RESERVED  ( BIT(0) )

/* vars definitions for controller CTL_ANLG_PHY_GC */


#endif /* __ANLG_PHY_GC_H____ */
